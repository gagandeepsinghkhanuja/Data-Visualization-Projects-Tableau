<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='DataScientistSalary-NationwideOverview' path='/workbooks' revision='3.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='ALL INDUSTRY' caption='TOP N' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL&quot;'>
        <calculation class='tableau' formula='&quot;ALL&quot;' />
        <aliases>
          <alias key='&quot;10&quot;' value='TOP 10' />
          <alias key='&quot;ALL&quot;' value='ALL INDUSTRY' />
        </aliases>
        <members>
          <member alias='TOP 10' value='&quot;10&quot;' />
          <member alias='ALL INDUSTRY' value='&quot;ALL&quot;' />
        </members>
      </column>
      <column alias='TOP 10' caption='TOP N CITY' datatype='string' name='[TOP N (copy)_1313151195044909059]' param-domain-type='list' role='measure' type='nominal' value='&quot;10&quot;'>
        <calculation class='tableau' formula='&quot;10&quot;' />
        <aliases>
          <alias key='&quot;10&quot;' value='TOP 10' />
          <alias key='&quot;ALL&quot;' value='ALL INDUSTRY' />
        </aliases>
        <members>
          <member alias='TOP 10' value='&quot;10&quot;' />
          <member alias='ALL INDUSTRY' value='&quot;ALL&quot;' />
        </members>
      </column>
      <column alias='TOP 10' caption='TOP N PROJ' datatype='string' name='[TOP N CITY (copy)_1864701412008599552]' param-domain-type='list' role='measure' type='nominal' value='&quot;10&quot;'>
        <calculation class='tableau' formula='&quot;10&quot;' />
        <aliases>
          <alias key='&quot;10&quot;' value='TOP 10' />
          <alias key='&quot;ALL&quot;' value='ALL INDUSTRY' />
        </aliases>
        <members>
          <member alias='TOP 10' value='&quot;10&quot;' />
          <member alias='ALL INDUSTRY' value='&quot;ALL&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='CITY (Data Scientist Salary - By Geography)' inline='true' name='federated.1hdudvf04xs14l1b8g2ri02oc6xp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data Scientist Salary - By Geography' name='excel-direct.0rsg4x911qzeja11b2ssp1s9yyxh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/gagandeepsingh/Desktop/Gagan/Data Science - Projects/Github/Data-Visualization-Projects-Tableau/Project1 - Visualizing Data Scientists Salaries(USA)/Input/Data Scientist Salary - By Geography.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0rsg4x911qzeja11b2ssp1s9yyxh' name='CITY' table='[CITY$]' type='table'>
          <columns gridOrigin='A1:S627:no:A1:S627:0' header='yes' outcome='2'>
            <column datatype='string' name='Area Name' ordinal='0' />
            <column datatype='string' name='Type' ordinal='1' />
            <column datatype='integer' name='Employment' ordinal='2' />
            <column datatype='real' name='Employment percent relative standard error' ordinal='3' />
            <column datatype='real' name='Hourly mean wage' ordinal='4' />
            <column datatype='integer' name='Annual mean wage' ordinal='5' />
            <column datatype='real' name='Wage percent relative standard error' ordinal='6' />
            <column datatype='real' name='Hourly 10th percentile wage' ordinal='7' />
            <column datatype='real' name='Hourly 25th percentile wage' ordinal='8' />
            <column datatype='real' name='Hourly median wage' ordinal='9' />
            <column datatype='real' name='Hourly 75th percentile wage' ordinal='10' />
            <column datatype='real' name='Hourly 90th percentile wage' ordinal='11' />
            <column datatype='integer' name='Annual 10th percentile wage' ordinal='12' />
            <column datatype='integer' name='Annual 25th percentile wage' ordinal='13' />
            <column datatype='integer' name='Annual median wage' ordinal='14' />
            <column datatype='integer' name='Annual 75th percentile wage' ordinal='15' />
            <column datatype='integer' name='Annual 90th percentile wage' ordinal='16' />
            <column datatype='real' name='Employment per 1,000 jobs' ordinal='17' />
            <column datatype='real' name='Location Quotient' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0rsg4x911qzeja11b2ssp1s9yyxh' name='CITY' table='[CITY$]' type='table'>
          <columns gridOrigin='A1:S627:no:A1:S627:0' header='yes' outcome='2'>
            <column datatype='string' name='Area Name' ordinal='0' />
            <column datatype='string' name='Type' ordinal='1' />
            <column datatype='integer' name='Employment' ordinal='2' />
            <column datatype='real' name='Employment percent relative standard error' ordinal='3' />
            <column datatype='real' name='Hourly mean wage' ordinal='4' />
            <column datatype='integer' name='Annual mean wage' ordinal='5' />
            <column datatype='real' name='Wage percent relative standard error' ordinal='6' />
            <column datatype='real' name='Hourly 10th percentile wage' ordinal='7' />
            <column datatype='real' name='Hourly 25th percentile wage' ordinal='8' />
            <column datatype='real' name='Hourly median wage' ordinal='9' />
            <column datatype='real' name='Hourly 75th percentile wage' ordinal='10' />
            <column datatype='real' name='Hourly 90th percentile wage' ordinal='11' />
            <column datatype='integer' name='Annual 10th percentile wage' ordinal='12' />
            <column datatype='integer' name='Annual 25th percentile wage' ordinal='13' />
            <column datatype='integer' name='Annual median wage' ordinal='14' />
            <column datatype='integer' name='Annual 75th percentile wage' ordinal='15' />
            <column datatype='integer' name='Annual 90th percentile wage' ordinal='16' />
            <column datatype='real' name='Employment per 1,000 jobs' ordinal='17' />
            <column datatype='real' name='Location Quotient' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CITY]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:S627:no:A1:S627:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area Name]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Area Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Employment]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Employment</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment percent relative standard error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment percent relative standard error]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Employment percent relative standard error</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly mean wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly mean wage]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Hourly mean wage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual mean wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual mean wage]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Annual mean wage</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wage percent relative standard error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wage percent relative standard error]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Wage percent relative standard error</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly 10th percentile wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly 10th percentile wage]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Hourly 10th percentile wage</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly 25th percentile wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly 25th percentile wage]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Hourly 25th percentile wage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly median wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly median wage]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Hourly median wage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly 75th percentile wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly 75th percentile wage]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Hourly 75th percentile wage</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly 90th percentile wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly 90th percentile wage]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Hourly 90th percentile wage</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual 10th percentile wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual 10th percentile wage]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Annual 10th percentile wage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual 25th percentile wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual 25th percentile wage]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Annual 25th percentile wage</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual median wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual median wage]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Annual median wage</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual 75th percentile wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual 75th percentile wage]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Annual 75th percentile wage</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual 90th percentile wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual 90th percentile wage]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Annual 90th percentile wage</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment per 1,000 jobs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment per 1,000 jobs]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Employment per 1,000 jobs</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location Quotient</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Location Quotient]</local-name>
            <parent-name>[CITY]</parent-name>
            <remote-alias>Location Quotient</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CITY_1671F003336D4F9D9661A722BC5E2C93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Annual 10th percentile wage]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Annual 25th percentile wage]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Annual 75th percentile wage]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Annual 90th percentile wage]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Annual median wage]' role='measure' type='quantitative' />
      <column datatype='string' name='[Area Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='TOP 10/ALL (CITY)' datatype='boolean' name='[Calculation_1313151195044061185]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&apos;10&apos; THEN [Calculation_1313151195044151298]&lt;=10&#10;ELSE [Calculation_1313151195044151298]&gt;0  END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='INDEX CITY' datatype='integer' name='[Calculation_1313151195044151298]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='CITY' datatype='table' name='[__tableau_internal_object_id__].[CITY_1671F003336D4F9D9661A722BC5E2C93]' role='measure' type='quantitative' />
      <column-instance column='[Area Name]' derivation='None' name='[none:Area Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Annual 10th percentile wage]' derivation='Sum' name='[sum:Annual 10th percentile wage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annual 25th percentile wage]' derivation='Sum' name='[sum:Annual 25th percentile wage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annual 75th percentile wage]' derivation='Sum' name='[sum:Annual 75th percentile wage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annual 90th percentile wage]' derivation='Sum' name='[sum:Annual 90th percentile wage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annual median wage]' derivation='Sum' name='[sum:Annual median wage:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/2n/w8h0n0gs0kx8ms3njt22t3s40000gn/T/tableau-temp/#TableauTemp_1h1z39102sk6ys18kxqfm04g6yj4.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/13/2024 11:04:34 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Area Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Area Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Area Name</remote-alias>
              <ordinal>0</ordinal>
              <family>CITY</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>626</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Type</remote-alias>
              <ordinal>1</ordinal>
              <family>CITY</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Employment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Employment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Employment</remote-alias>
              <ordinal>2</ordinal>
              <family>CITY</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Employment percent relative standard error</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Employment percent relative standard error]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Employment percent relative standard error</remote-alias>
              <ordinal>3</ordinal>
              <family>CITY</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>186</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hourly mean wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hourly mean wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hourly mean wage</remote-alias>
              <ordinal>4</ordinal>
              <family>CITY</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>332</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual mean wage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual mean wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual mean wage</remote-alias>
              <ordinal>5</ordinal>
              <family>CITY</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>347</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wage percent relative standard error</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Wage percent relative standard error]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wage percent relative standard error</remote-alias>
              <ordinal>6</ordinal>
              <family>CITY</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hourly 10th percentile wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hourly 10th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hourly 10th percentile wage</remote-alias>
              <ordinal>7</ordinal>
              <family>CITY</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>330</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hourly 25th percentile wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hourly 25th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hourly 25th percentile wage</remote-alias>
              <ordinal>8</ordinal>
              <family>CITY</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>311</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hourly median wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hourly median wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hourly median wage</remote-alias>
              <ordinal>9</ordinal>
              <family>CITY</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>327</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hourly 75th percentile wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hourly 75th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hourly 75th percentile wage</remote-alias>
              <ordinal>10</ordinal>
              <family>CITY</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>338</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hourly 90th percentile wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hourly 90th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hourly 90th percentile wage</remote-alias>
              <ordinal>11</ordinal>
              <family>CITY</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>336</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual 10th percentile wage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual 10th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual 10th percentile wage</remote-alias>
              <ordinal>12</ordinal>
              <family>CITY</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>338</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual 25th percentile wage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual 25th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual 25th percentile wage</remote-alias>
              <ordinal>13</ordinal>
              <family>CITY</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>331</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual median wage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual median wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual median wage</remote-alias>
              <ordinal>14</ordinal>
              <family>CITY</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>341</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual 75th percentile wage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual 75th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual 75th percentile wage</remote-alias>
              <ordinal>15</ordinal>
              <family>CITY</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>348</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual 90th percentile wage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual 90th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual 90th percentile wage</remote-alias>
              <ordinal>16</ordinal>
              <family>CITY</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>339</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Employment per 1,000 jobs</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Employment per 1,000 jobs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Employment per 1,000 jobs</remote-alias>
              <ordinal>17</ordinal>
              <family>CITY</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>324</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location Quotient</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Location Quotient]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location Quotient</remote-alias>
              <ordinal>18</ordinal>
              <family>CITY</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>136</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 10th percentile wage:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 90th percentile wage:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 75th percentile wage:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 25th percentile wage:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Area Name:nk]' palette='orange_gold_10_0' type='palette'>
            <map to='#9e3a25'>
              <bucket>&quot;Idaho Falls,ID&quot;</bucket>
            </map>
            <map to='#9e3a25'>
              <bucket>&quot;Kennewick,WA&quot;</bucket>
            </map>
            <map to='#9e3a25'>
              <bucket>&quot;North Central Tennessee nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#9e3a26'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#9e3a26'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#9e3a26'>
              <bucket>&quot;Norwalk,CT&quot;</bucket>
            </map>
            <map to='#9e3a26'>
              <bucket>&quot;Richland,WA&quot;</bucket>
            </map>
            <map to='#9f3a25'>
              <bucket>&quot;Cape Girardeau, MO&quot;</bucket>
            </map>
            <map to='#9f3a25'>
              <bucket>&quot;Montgomery,AL&quot;</bucket>
            </map>
            <map to='#9f3a25'>
              <bucket>&quot;Northeast Mississippi nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#a03a25'>
              <bucket>&quot;Cape Girardeau, IL&quot;</bucket>
            </map>
            <map to='#a03b25'>
              <bucket>&quot;East Kentucky nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#a03b25'>
              <bucket>&quot;Gainesville,FL&quot;</bucket>
            </map>
            <map to='#a13b25'>
              <bucket>&quot;North Missouri nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#a13b25'>
              <bucket>&quot;South Central Kentucky nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#a13b25'>
              <bucket>&quot;Western Pennsylvania nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#a23b25'>
              <bucket>&quot;Central Indiana nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#a23b25'>
              <bucket>&quot;South Georgia nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#a23c25'>
              <bucket>&quot;Northwest Oklahoma nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#a33c25'>
              <bucket>&quot;Caguas,PR&quot;</bucket>
            </map>
            <map to='#a33c25'>
              <bucket>&quot;Carolina,PR&quot;</bucket>
            </map>
            <map to='#a33c25'>
              <bucket>&quot;San Juan,PR&quot;</bucket>
            </map>
            <map to='#a43c24'>
              <bucket>&quot;North Northeastern Ohio nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#a43c24'>
              <bucket>&quot;West Central Illinois nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#a43c25'>
              <bucket>&quot;Charleston,WV&quot;</bucket>
            </map>
            <map to='#a53d24'>
              <bucket>&quot;Baton Rouge,LA&quot;</bucket>
            </map>
            <map to='#a53d24'>
              <bucket>&quot;Gainesville,GA&quot;</bucket>
            </map>
            <map to='#a53d24'>
              <bucket>&quot;Upper Peninsula of Michigan nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#a63d24'>
              <bucket>&quot;Chattanooga, GA&quot;</bucket>
            </map>
            <map to='#a63d24'>
              <bucket>&quot;Chattanooga, TN&quot;</bucket>
            </map>
            <map to='#a63d24'>
              <bucket>&quot;Springfield,MO&quot;</bucket>
            </map>
            <map to='#a73d24'>
              <bucket>&quot;Ames,IA&quot;</bucket>
            </map>
            <map to='#a73e24'>
              <bucket>&quot;Laredo,TX&quot;</bucket>
            </map>
            <map to='#a73e24'>
              <bucket>&quot;Southern Indiana nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#a83e24'>
              <bucket>&quot;Evansville, IN&quot;</bucket>
            </map>
            <map to='#a83e24'>
              <bucket>&quot;Evansville, KY&quot;</bucket>
            </map>
            <map to='#a83e24'>
              <bucket>&quot;Toledo,OH&quot;</bucket>
            </map>
            <map to='#a93e24'>
              <bucket>&quot;Altoona,PA&quot;</bucket>
            </map>
            <map to='#a93e24'>
              <bucket>&quot;Tallahassee,FL&quot;</bucket>
            </map>
            <map to='#a93f24'>
              <bucket>&quot;Savannah,GA&quot;</bucket>
            </map>
            <map to='#aa3f23'>
              <bucket>&quot;Edinburg,TX&quot;</bucket>
            </map>
            <map to='#aa3f24'>
              <bucket>&quot;McAllen,TX&quot;</bucket>
            </map>
            <map to='#aa3f24'>
              <bucket>&quot;Mission,TX&quot;</bucket>
            </map>
            <map to='#ab3f23'>
              <bucket>&quot;Flint,MI&quot;</bucket>
            </map>
            <map to='#ab3f23'>
              <bucket>&quot;Rome,NY&quot;</bucket>
            </map>
            <map to='#ab3f23'>
              <bucket>&quot;Utica,NY&quot;</bucket>
            </map>
            <map to='#ac4023'>
              <bucket>&quot;Logan, ID&quot;</bucket>
            </map>
            <map to='#ac4023'>
              <bucket>&quot;Logan, UT&quot;</bucket>
            </map>
            <map to='#ac4023'>
              <bucket>&quot;Northern Pennsylvania nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#ad4023'>
              <bucket>&quot;Balance of Lower Peninsula of Michigan nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#ad4023'>
              <bucket>&quot;Dubuque,IA&quot;</bucket>
            </map>
            <map to='#ad4023'>
              <bucket>&quot;Goshen,IN&quot;</bucket>
            </map>
            <map to='#ae4023'>
              <bucket>&quot;Elkhart,IN&quot;</bucket>
            </map>
            <map to='#ae4023'>
              <bucket>&quot;Middle Georgia nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#ae4123'>
              <bucket>&quot;Joplin,MO&quot;</bucket>
            </map>
            <map to='#af4123'>
              <bucket>&quot;Erie,PA&quot;</bucket>
            </map>
            <map to='#af4123'>
              <bucket>&quot;Northwest Lower Peninsula of Michigan nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#af4123'>
              <bucket>&quot;Piedmont North Carolina nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#b04123'>
              <bucket>&quot;North Valley-Northern Mountains Region of California nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#b04123'>
              <bucket>&quot;Panama City,FL&quot;</bucket>
            </map>
            <map to='#b04123'>
              <bucket>&quot;Terre Haute,IN&quot;</bucket>
            </map>
            <map to='#b14223'>
              <bucket>&quot;Brent,FL&quot;</bucket>
            </map>
            <map to='#b14223'>
              <bucket>&quot;Ferry Pass,FL&quot;</bucket>
            </map>
            <map to='#b14223'>
              <bucket>&quot;Pensacola,FL&quot;</bucket>
            </map>
            <map to='#b24223'>
              <bucket>&quot;Central Missouri nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#b24223'>
              <bucket>&quot;Southern Ohio nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#b34223'>
              <bucket>&quot;Bridgeport,CT&quot;</bucket>
            </map>
            <map to='#b34223'>
              <bucket>&quot;Columbia,MO&quot;</bucket>
            </map>
            <map to='#b34223'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#b34223'>
              <bucket>&quot;Eastern Utah nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#b34223'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#b34223'>
              <bucket>&quot;Tyler,TX&quot;</bucket>
            </map>
            <map to='#b44323'>
              <bucket>&quot;Clarksville, TN&quot;</bucket>
            </map>
            <map to='#b44323'>
              <bucket>&quot;Lancaster,PA&quot;</bucket>
            </map>
            <map to='#b44323'>
              <bucket>&quot;North Texas Region of Texas nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#b54323'>
              <bucket>&quot;Clarksville, KY&quot;</bucket>
            </map>
            <map to='#b54323'>
              <bucket>&quot;Fort Wayne,IN&quot;</bucket>
            </map>
            <map to='#b54323'>
              <bucket>&quot;Northeast Oklahoma nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#b64323'>
              <bucket>&quot;Corpus Christi,TX&quot;</bucket>
            </map>
            <map to='#b64323'>
              <bucket>&quot;Florence,SC&quot;</bucket>
            </map>
            <map to='#b64423'>
              <bucket>&quot;Richmond County, SC&quot;</bucket>
            </map>
            <map to='#b74423'>
              <bucket>&quot;Augusta, GA&quot;</bucket>
            </map>
            <map to='#b74423'>
              <bucket>&quot;Augusta, SC&quot;</bucket>
            </map>
            <map to='#b74423'>
              <bucket>&quot;Richmond County, GA&quot;</bucket>
            </map>
            <map to='#b84423'>
              <bucket>&quot;Northern Indiana nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#b84423'>
              <bucket>&quot;Portsmouth, ME&quot;</bucket>
            </map>
            <map to='#b84423'>
              <bucket>&quot;Portsmouth, NH&quot;</bucket>
            </map>
            <map to='#b94423'>
              <bucket>&quot;Battle Creek,MI&quot;</bucket>
            </map>
            <map to='#b94523'>
              <bucket>&quot;Jackson,MS&quot;</bucket>
            </map>
            <map to='#ba4523'>
              <bucket>&quot;Mishawaka, MI&quot;</bucket>
            </map>
            <map to='#ba4523'>
              <bucket>&quot;South Bend, IN&quot;</bucket>
            </map>
            <map to='#ba4523'>
              <bucket>&quot;South Bend, MI&quot;</bucket>
            </map>
            <map to='#bb4523'>
              <bucket>&quot;Bakersfield,CA&quot;</bucket>
            </map>
            <map to='#bb4523'>
              <bucket>&quot;Ithaca,NY&quot;</bucket>
            </map>
            <map to='#bb4523'>
              <bucket>&quot;Mishawaka, IN&quot;</bucket>
            </map>
            <map to='#bc4523'>
              <bucket>&quot;Dayton,OH&quot;</bucket>
            </map>
            <map to='#bc4623'>
              <bucket>&quot;Metairie,LA&quot;</bucket>
            </map>
            <map to='#bc4623'>
              <bucket>&quot;New Orleans,LA&quot;</bucket>
            </map>
            <map to='#bd4623'>
              <bucket>&quot;Midland,MI&quot;</bucket>
            </map>
            <map to='#bd4623'>
              <bucket>&quot;Southeast Oklahoma nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#bd4623'>
              <bucket>&quot;West Central-Southwest New Hampshire nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#be4623'>
              <bucket>&quot;Mobile,AL&quot;</bucket>
            </map>
            <map to='#be4623'>
              <bucket>&quot;Scranton,PA&quot;</bucket>
            </map>
            <map to='#be4623'>
              <bucket>&quot;Wilkes,PA&quot;</bucket>
            </map>
            <map to='#bf4623'>
              <bucket>&quot;Hazleton,PA&quot;</bucket>
            </map>
            <map to='#bf4723'>
              <bucket>&quot;Barre,PA&quot;</bucket>
            </map>
            <map to='#bf4723'>
              <bucket>&quot;Salinas,CA&quot;</bucket>
            </map>
            <map to='#c04723'>
              <bucket>&quot;Northeast Iowa nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#c04723'>
              <bucket>&quot;Northern Vermont nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#c14723'>
              <bucket>&quot;Bloomington,IN&quot;</bucket>
            </map>
            <map to='#c14723'>
              <bucket>&quot;Kalamazoo,MI&quot;</bucket>
            </map>
            <map to='#c14723'>
              <bucket>&quot;Portage,MI&quot;</bucket>
            </map>
            <map to='#c24723'>
              <bucket>&quot;West Lafayette,IN&quot;</bucket>
            </map>
            <map to='#c24823'>
              <bucket>&quot;Lafayette,IN&quot;</bucket>
            </map>
            <map to='#c24823'>
              <bucket>&quot;Ormond Beach,FL&quot;</bucket>
            </map>
            <map to='#c34823'>
              <bucket>&quot;Daytona Beach,FL&quot;</bucket>
            </map>
            <map to='#c34823'>
              <bucket>&quot;Deltona,FL&quot;</bucket>
            </map>
            <map to='#c34823'>
              <bucket>&quot;Lansing,MI&quot;</bucket>
            </map>
            <map to='#c44823'>
              <bucket>&quot;East Lansing,MI&quot;</bucket>
            </map>
            <map to='#c44823'>
              <bucket>&quot;Flagstaff,AZ&quot;</bucket>
            </map>
            <map to='#c44823'>
              <bucket>&quot;Vallejo,CA&quot;</bucket>
            </map>
            <map to='#c54922'>
              <bucket>&quot;Carmel,IN&quot;</bucket>
            </map>
            <map to='#c54922'>
              <bucket>&quot;Fairfield,CA&quot;</bucket>
            </map>
            <map to='#c54922'>
              <bucket>&quot;Indianapolis,IN&quot;</bucket>
            </map>
            <map to='#c64922'>
              <bucket>&quot;Anderson,IN&quot;</bucket>
            </map>
            <map to='#c64922'>
              <bucket>&quot;El Paso,TX&quot;</bucket>
            </map>
            <map to='#c64922'>
              <bucket>&quot;Iowa City,IA&quot;</bucket>
            </map>
            <map to='#c64a22'>
              <bucket>&quot;Durham, NH&quot;</bucket>
            </map>
            <map to='#c74a22'>
              <bucket>&quot;Dover, ME&quot;</bucket>
            </map>
            <map to='#c74a22'>
              <bucket>&quot;Dover, NH&quot;</bucket>
            </map>
            <map to='#c74a22'>
              <bucket>&quot;Durham, ME&quot;</bucket>
            </map>
            <map to='#c84a22'>
              <bucket>&quot;Mountain North Carolina nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#c84b22'>
              <bucket>&quot;Albuquerque,NM&quot;</bucket>
            </map>
            <map to='#c84b22'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#c84b22'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#c84b22'>
              <bucket>&quot;San Francisco,CA&quot;</bucket>
            </map>
            <map to='#c84b22'>
              <bucket>&quot;Warner Robins,GA&quot;</bucket>
            </map>
            <map to='#c94b22'>
              <bucket>&quot;Lexington,KY&quot;</bucket>
            </map>
            <map to='#c94b22'>
              <bucket>&quot;Pittsburgh,PA&quot;</bucket>
            </map>
            <map to='#c94b22'>
              <bucket>&quot;Reno,NV&quot;</bucket>
            </map>
            <map to='#c94b22'>
              <bucket>&quot;Yuma,AZ&quot;</bucket>
            </map>
            <map to='#ca4c22'>
              <bucket>&quot;Big Thicket Region of Texas nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#ca4c22'>
              <bucket>&quot;Fayette,KY&quot;</bucket>
            </map>
            <map to='#ca4c22'>
              <bucket>&quot;Southeast Iowa nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#cb4c22'>
              <bucket>&quot;Arizona nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#cb4c22'>
              <bucket>&quot;Central East New York nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#cb4c22'>
              <bucket>&quot;Columbus, GA&quot;</bucket>
            </map>
            <map to='#cc4d22'>
              <bucket>&quot;Alaska nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#cc4d22'>
              <bucket>&quot;Columbus, AL&quot;</bucket>
            </map>
            <map to='#cc4d22'>
              <bucket>&quot;Hoover,AL&quot;</bucket>
            </map>
            <map to='#cc4d22'>
              <bucket>&quot;North Georgia nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#cd4d22'>
              <bucket>&quot;Birmingham,AL&quot;</bucket>
            </map>
            <map to='#cd4e22'>
              <bucket>&quot;Killeen,TX&quot;</bucket>
            </map>
            <map to='#cd4e22'>
              <bucket>&quot;Temple,TX&quot;</bucket>
            </map>
            <map to='#ce4e22'>
              <bucket>&quot;Anchorage,AK&quot;</bucket>
            </map>
            <map to='#ce4e22'>
              <bucket>&quot;Benton Harbor,MI&quot;</bucket>
            </map>
            <map to='#ce4e22'>
              <bucket>&quot;Niles,MI&quot;</bucket>
            </map>
            <map to='#ce4e22'>
              <bucket>&quot;Wyoming,MI&quot;</bucket>
            </map>
            <map to='#cf4f22'>
              <bucket>&quot;Grand Rapids,MI&quot;</bucket>
            </map>
            <map to='#cf4f22'>
              <bucket>&quot;Rochester,NY&quot;</bucket>
            </map>
            <map to='#cf4f22'>
              <bucket>&quot;South Central Wisconsin nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#d04f22'>
              <bucket>&quot;Capital/Northern New York nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#d04f22'>
              <bucket>&quot;Columbia,SC&quot;</bucket>
            </map>
            <map to='#d04f22'>
              <bucket>&quot;Tulsa,OK&quot;</bucket>
            </map>
            <map to='#d15022'>
              <bucket>&quot;Kansas City, KS&quot;</bucket>
            </map>
            <map to='#d15022'>
              <bucket>&quot;Kansas City, MO&quot;</bucket>
            </map>
            <map to='#d15022'>
              <bucket>&quot;Ocala,FL&quot;</bucket>
            </map>
            <map to='#d15022'>
              <bucket>&quot;Radford,VA&quot;</bucket>
            </map>
            <map to='#d25022'>
              <bucket>&quot;Blacksburg,VA&quot;</bucket>
            </map>
            <map to='#d25022'>
              <bucket>&quot;Christiansburg,VA&quot;</bucket>
            </map>
            <map to='#d25122'>
              <bucket>&quot;Harrisburg,PA&quot;</bucket>
            </map>
            <map to='#d35122'>
              <bucket>&quot;Carlisle,PA&quot;</bucket>
            </map>
            <map to='#d35122'>
              <bucket>&quot;St. Louis, IL&quot;</bucket>
            </map>
            <map to='#d35122'>
              <bucket>&quot;St. Louis, MO&quot;</bucket>
            </map>
            <map to='#d45122'>
              <bucket>&quot;South Nebraska nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#d45222'>
              <bucket>&quot;Warren, PA&quot;</bucket>
            </map>
            <map to='#d45222'>
              <bucket>&quot;Youngstown, OH&quot;</bucket>
            </map>
            <map to='#d45222'>
              <bucket>&quot;Youngstown, PA&quot;</bucket>
            </map>
            <map to='#d55222'>
              <bucket>&quot;Boardman, OH&quot;</bucket>
            </map>
            <map to='#d55222'>
              <bucket>&quot;Boardman, PA&quot;</bucket>
            </map>
            <map to='#d55222'>
              <bucket>&quot;Warren, OH&quot;</bucket>
            </map>
            <map to='#d65321'>
              <bucket>&quot;Auburn,ME&quot;</bucket>
            </map>
            <map to='#d65321'>
              <bucket>&quot;Fort Myers,FL&quot;</bucket>
            </map>
            <map to='#d65321'>
              <bucket>&quot;Lewiston,ME&quot;</bucket>
            </map>
            <map to='#d65321'>
              <bucket>&quot;West Kentucky nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#d65421'>
              <bucket>&quot;Cape Coral,FL&quot;</bucket>
            </map>
            <map to='#d75421'>
              <bucket>&quot;Eastern Oregon nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#d75421'>
              <bucket>&quot;Fresno,CA&quot;</bucket>
            </map>
            <map to='#d75421'>
              <bucket>&quot;Southwest Maine nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#d75521'>
              <bucket>&quot;Paradise,NV&quot;</bucket>
            </map>
            <map to='#d75521'>
              <bucket>&quot;Roanoke,VA&quot;</bucket>
            </map>
            <map to='#d85521'>
              <bucket>&quot;Henderson,NV&quot;</bucket>
            </map>
            <map to='#d85521'>
              <bucket>&quot;Las Vegas,NV&quot;</bucket>
            </map>
            <map to='#d85621'>
              <bucket>&quot;Eastern New Mexico nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#d85621'>
              <bucket>&quot;Louisville/Jefferson County, KY&quot;</bucket>
            </map>
            <map to='#d95621'>
              <bucket>&quot;Louisville/Jefferson County, IN&quot;</bucket>
            </map>
            <map to='#d95721'>
              <bucket>&quot;Champaign,IL&quot;</bucket>
            </map>
            <map to='#d95721'>
              <bucket>&quot;Lincoln,NE&quot;</bucket>
            </map>
            <map to='#d95721'>
              <bucket>&quot;Southwest New York nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#d95721'>
              <bucket>&quot;Urbana,IL&quot;</bucket>
            </map>
            <map to='#da5820'>
              <bucket>&quot;Knoxville,TN&quot;</bucket>
            </map>
            <map to='#da5820'>
              <bucket>&quot;Morganton,NC&quot;</bucket>
            </map>
            <map to='#da5820'>
              <bucket>&quot;Nevada nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#da5820'>
              <bucket>&quot;Northeast Nebraska nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#da5821'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#da5821'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#da5821'>
              <bucket>&quot;Oakland,CA&quot;</bucket>
            </map>
            <map to='#da5920'>
              <bucket>&quot;Lenoir,NC&quot;</bucket>
            </map>
            <map to='#db5920'>
              <bucket>&quot;Appleton,WI&quot;</bucket>
            </map>
            <map to='#db5920'>
              <bucket>&quot;Hickory,NC&quot;</bucket>
            </map>
            <map to='#db5920'>
              <bucket>&quot;Kingston,NY&quot;</bucket>
            </map>
            <map to='#db5a20'>
              <bucket>&quot;Oklahoma City,OK&quot;</bucket>
            </map>
            <map to='#db5a20'>
              <bucket>&quot;Spartanburg,SC&quot;</bucket>
            </map>
            <map to='#dc5a20'>
              <bucket>&quot;Lubbock,TX&quot;</bucket>
            </map>
            <map to='#dc5a20'>
              <bucket>&quot;Sanford,FL&quot;</bucket>
            </map>
            <map to='#dc5b20'>
              <bucket>&quot;Kissimmee,FL&quot;</bucket>
            </map>
            <map to='#dc5b20'>
              <bucket>&quot;Orlando,FL&quot;</bucket>
            </map>
            <map to='#dd5b20'>
              <bucket>&quot;Cedar Rapids,IA&quot;</bucket>
            </map>
            <map to='#dd5c20'>
              <bucket>&quot;Anderson,SC&quot;</bucket>
            </map>
            <map to='#dd5c20'>
              <bucket>&quot;Greenville,SC&quot;</bucket>
            </map>
            <map to='#dd5c20'>
              <bucket>&quot;Mauldin,SC&quot;</bucket>
            </map>
            <map to='#dd5c20'>
              <bucket>&quot;Ogden,UT&quot;</bucket>
            </map>
            <map to='#de5d1f'>
              <bucket>&quot;Clearfield,UT&quot;</bucket>
            </map>
            <map to='#de5d1f'>
              <bucket>&quot;Lodi,CA&quot;</bucket>
            </map>
            <map to='#de5d1f'>
              <bucket>&quot;Manchester,NH&quot;</bucket>
            </map>
            <map to='#de5d1f'>
              <bucket>&quot;Stockton,CA&quot;</bucket>
            </map>
            <map to='#de5e1f'>
              <bucket>&quot;Coastal Plains Region of Texas nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#df5e1f'>
              <bucket>&quot;Bryan,TX&quot;</bucket>
            </map>
            <map to='#df5e1f'>
              <bucket>&quot;College Station,TX&quot;</bucket>
            </map>
            <map to='#df5e1f'>
              <bucket>&quot;West Northwestern Ohio nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#df5f1f'>
              <bucket>&quot;Bluffton,SC&quot;</bucket>
            </map>
            <map to='#df5f1f'>
              <bucket>&quot;Hilton Head Island,SC&quot;</bucket>
            </map>
            <map to='#e05f1f'>
              <bucket>&quot;Beaufort,SC&quot;</bucket>
            </map>
            <map to='#e05f1f'>
              <bucket>&quot;North Myrtle Beach, SC&quot;</bucket>
            </map>
            <map to='#e0601f'>
              <bucket>&quot;Myrtle Beach, NC&quot;</bucket>
            </map>
            <map to='#e0601f'>
              <bucket>&quot;Myrtle Beach, SC&quot;</bucket>
            </map>
            <map to='#e0601f'>
              <bucket>&quot;North Myrtle Beach, NC&quot;</bucket>
            </map>
            <map to='#e1611f'>
              <bucket>&quot;Conway, NC&quot;</bucket>
            </map>
            <map to='#e1611f'>
              <bucket>&quot;Conway, SC&quot;</bucket>
            </map>
            <map to='#e1611f'>
              <bucket>&quot;Hanover,PA&quot;</bucket>
            </map>
            <map to='#e1611f'>
              <bucket>&quot;York,PA&quot;</bucket>
            </map>
            <map to='#e2621e'>
              <bucket>&quot;Southwest Oklahoma nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#e2621e'>
              <bucket>&quot;Springfield, CT&quot;</bucket>
            </map>
            <map to='#e2621e'>
              <bucket>&quot;Springfield, MA&quot;</bucket>
            </map>
            <map to='#e2621e'>
              <bucket>&quot;Syracuse,NY&quot;</bucket>
            </map>
            <map to='#e2631e'>
              <bucket>&quot;Waco,TX&quot;</bucket>
            </map>
            <map to='#e3631e'>
              <bucket>&quot;Hill Country Region of Texas nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#e3631e'>
              <bucket>&quot;Visalia,CA&quot;</bucket>
            </map>
            <map to='#e3631e'>
              <bucket>&quot;West Texas Region of Texas nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#e3641e'>
              <bucket>&quot;Porterville,CA&quot;</bucket>
            </map>
            <map to='#e4641e'>
              <bucket>&quot;Crestview,FL&quot;</bucket>
            </map>
            <map to='#e4641e'>
              <bucket>&quot;Destin,FL&quot;</bucket>
            </map>
            <map to='#e4641e'>
              <bucket>&quot;Fort Walton Beach,FL&quot;</bucket>
            </map>
            <map to='#e4641e'>
              <bucket>&quot;Sioux Falls,SD&quot;</bucket>
            </map>
            <map to='#e5651d'>
              <bucket>&quot;Port Arthur,TX&quot;</bucket>
            </map>
            <map to='#e5651d'>
              <bucket>&quot;Southern Pennsylvania nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#e5651e'>
              <bucket>&quot;Binghamton,NY&quot;</bucket>
            </map>
            <map to='#e5651e'>
              <bucket>&quot;Tuscaloosa,AL&quot;</bucket>
            </map>
            <map to='#e5661d'>
              <bucket>&quot;Beaumont,TX&quot;</bucket>
            </map>
            <map to='#e6661d'>
              <bucket>&quot;Albany,GA&quot;</bucket>
            </map>
            <map to='#e6661d'>
              <bucket>&quot;Elyria,OH&quot;</bucket>
            </map>
            <map to='#e6661d'>
              <bucket>&quot;Springfield,IL&quot;</bucket>
            </map>
            <map to='#e6671d'>
              <bucket>&quot;Cleveland,OH&quot;</bucket>
            </map>
            <map to='#e7671d'>
              <bucket>&quot;Arden,CA&quot;</bucket>
            </map>
            <map to='#e7671d'>
              <bucket>&quot;Roseville,CA&quot;</bucket>
            </map>
            <map to='#e7671d'>
              <bucket>&quot;Sacramento,CA&quot;</bucket>
            </map>
            <map to='#e7681d'>
              <bucket>&quot;Arcade,CA&quot;</bucket>
            </map>
            <map to='#e7681d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#e7681d'>
              <bucket>&quot;Hayward,CA&quot;</bucket>
            </map>
            <map to='#e7681d'>
              <bucket>&quot;Wichita,KS&quot;</bucket>
            </map>
            <map to='#e7681d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#e8681d'>
              <bucket>&quot;Bangor,ME&quot;</bucket>
            </map>
            <map to='#e8681d'>
              <bucket>&quot;Port St. Lucie,FL&quot;</bucket>
            </map>
            <map to='#e8691c'>
              <bucket>&quot;Jackson,MI&quot;</bucket>
            </map>
            <map to='#e8691c'>
              <bucket>&quot;Northeast Maine nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#e9691c'>
              <bucket>&quot;Miami,FL&quot;</bucket>
            </map>
            <map to='#e9691c'>
              <bucket>&quot;West Palm Beach,FL&quot;</bucket>
            </map>
            <map to='#e96a1c'>
              <bucket>&quot;Fort Lauderdale,FL&quot;</bucket>
            </map>
            <map to='#e96a1c'>
              <bucket>&quot;Sioux City, SD&quot;</bucket>
            </map>
            <map to='#ea6a1c'>
              <bucket>&quot;Sioux City, IA&quot;</bucket>
            </map>
            <map to='#ea6a1c'>
              <bucket>&quot;Sioux City, NE&quot;</bucket>
            </map>
            <map to='#ea6b1c'>
              <bucket>&quot;Columbus,OH&quot;</bucket>
            </map>
            <map to='#ea6b1c'>
              <bucket>&quot;Macon,GA&quot;</bucket>
            </map>
            <map to='#ea6b1c'>
              <bucket>&quot;Napa,CA&quot;</bucket>
            </map>
            <map to='#eb6b1c'>
              <bucket>&quot;Central New Hampshire nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#eb6c1b'>
              <bucket>&quot;Charleston,SC&quot;</bucket>
            </map>
            <map to='#eb6c1c'>
              <bucket>&quot;Central Oregon nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#eb6c1c'>
              <bucket>&quot;North Charleston,SC&quot;</bucket>
            </map>
            <map to='#ec6c1b'>
              <bucket>&quot;Danbury,CT&quot;</bucket>
            </map>
            <map to='#ec6d1b'>
              <bucket>&quot;Eugene,OR&quot;</bucket>
            </map>
            <map to='#ec6d1b'>
              <bucket>&quot;Huntington, KY&quot;</bucket>
            </map>
            <map to='#ec6d1b'>
              <bucket>&quot;Huntington, OH&quot;</bucket>
            </map>
            <map to='#ec6d1b'>
              <bucket>&quot;Huntington, WV&quot;</bucket>
            </map>
            <map to='#ed6e1b'>
              <bucket>&quot;Ashland, KY&quot;</bucket>
            </map>
            <map to='#ed6e1b'>
              <bucket>&quot;Ashland, OH&quot;</bucket>
            </map>
            <map to='#ed6e1b'>
              <bucket>&quot;Ashland, WV&quot;</bucket>
            </map>
            <map to='#ed6e1b'>
              <bucket>&quot;Omaha, NE&quot;</bucket>
            </map>
            <map to='#ee6f1b'>
              <bucket>&quot;Council Bluffs, IA&quot;</bucket>
            </map>
            <map to='#ee6f1b'>
              <bucket>&quot;Council Bluffs, NE&quot;</bucket>
            </map>
            <map to='#ee6f1b'>
              <bucket>&quot;Omaha, IA&quot;</bucket>
            </map>
            <map to='#ee6f1b'>
              <bucket>&quot;Tucson,AZ&quot;</bucket>
            </map>
            <map to='#ef701b'>
              <bucket>&quot;Bend,OR&quot;</bucket>
            </map>
            <map to='#ef701b'>
              <bucket>&quot;Coast Oregon nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#ef701b'>
              <bucket>&quot;Redmond,OR&quot;</bucket>
            </map>
            <map to='#ef711b'>
              <bucket>&quot;Northeastern Wisconsin nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#ef711c'>
              <bucket>&quot;New Haven,CT&quot;</bucket>
            </map>
            <map to='#ef711c'>
              <bucket>&quot;Warren,MI&quot;</bucket>
            </map>
            <map to='#ef721c'>
              <bucket>&quot;Dearborn,MI&quot;</bucket>
            </map>
            <map to='#ef721c'>
              <bucket>&quot;Detroit,MI&quot;</bucket>
            </map>
            <map to='#ef721d'>
              <bucket>&quot;Onalaska, WI&quot;</bucket>
            </map>
            <map to='#ef731d'>
              <bucket>&quot;La Crosse, WI&quot;</bucket>
            </map>
            <map to='#ef731d'>
              <bucket>&quot;Onalaska, MN&quot;</bucket>
            </map>
            <map to='#ef741d'>
              <bucket>&quot;La Crosse, MN&quot;</bucket>
            </map>
            <map to='#ef741e'>
              <bucket>&quot;North Port,FL&quot;</bucket>
            </map>
            <map to='#ef741e'>
              <bucket>&quot;Sarasota,FL&quot;</bucket>
            </map>
            <map to='#ef751e'>
              <bucket>&quot;Bradenton,FL&quot;</bucket>
            </map>
            <map to='#f0751e'>
              <bucket>&quot;Nashville,TN&quot;</bucket>
            </map>
            <map to='#f0751f'>
              <bucket>&quot;Murfreesboro,TN&quot;</bucket>
            </map>
            <map to='#f0761f'>
              <bucket>&quot;Davidson,TN&quot;</bucket>
            </map>
            <map to='#f0761f'>
              <bucket>&quot;Franklin,TN&quot;</bucket>
            </map>
            <map to='#f0761f'>
              <bucket>&quot;The Woodlands,TX&quot;</bucket>
            </map>
            <map to='#f07720'>
              <bucket>&quot;Houston,TX&quot;</bucket>
            </map>
            <map to='#f07720'>
              <bucket>&quot;Sugar Land,TX&quot;</bucket>
            </map>
            <map to='#f07820'>
              <bucket>&quot;Provo,UT&quot;</bucket>
            </map>
            <map to='#f07821'>
              <bucket>&quot;Orem,UT&quot;</bucket>
            </map>
            <map to='#f07821'>
              <bucket>&quot;Winter Haven,FL&quot;</bucket>
            </map>
            <map to='#f07921'>
              <bucket>&quot;Lakeland,FL&quot;</bucket>
            </map>
            <map to='#f07921'>
              <bucket>&quot;Titusville,FL&quot;</bucket>
            </map>
            <map to='#f07922'>
              <bucket>&quot;Palm Bay,FL&quot;</bucket>
            </map>
            <map to='#f07a22'>
              <bucket>&quot;Niagara Falls,NY&quot;</bucket>
            </map>
            <map to='#f17a22'>
              <bucket>&quot;Melbourne,FL&quot;</bucket>
            </map>
            <map to='#f17b22'>
              <bucket>&quot;Cheektowaga,NY&quot;</bucket>
            </map>
            <map to='#f17b23'>
              <bucket>&quot;Buffalo,NY&quot;</bucket>
            </map>
            <map to='#f17b23'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f17b23'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#f17b23'>
              <bucket>&quot;Salt Lake City,UT&quot;</bucket>
            </map>
            <map to='#f17b23'>
              <bucket>&quot;Sunnyvale,CA&quot;</bucket>
            </map>
            <map to='#f17c23'>
              <bucket>&quot;Midland,TX&quot;</bucket>
            </map>
            <map to='#f17c23'>
              <bucket>&quot;Saginaw,MI&quot;</bucket>
            </map>
            <map to='#f17c24'>
              <bucket>&quot;Reading,PA&quot;</bucket>
            </map>
            <map to='#f17d24'>
              <bucket>&quot;Douglas,AZ&quot;</bucket>
            </map>
            <map to='#f17d24'>
              <bucket>&quot;Sierra Vista,AZ&quot;</bucket>
            </map>
            <map to='#f17d24'>
              <bucket>&quot;Southeast Coastal North Carolina nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#f17e25'>
              <bucket>&quot;Cedar Falls,IA&quot;</bucket>
            </map>
            <map to='#f17e25'>
              <bucket>&quot;Waterloo,IA&quot;</bucket>
            </map>
            <map to='#f17f25'>
              <bucket>&quot;Easton, PA&quot;</bucket>
            </map>
            <map to='#f17f26'>
              <bucket>&quot;Easton, NJ&quot;</bucket>
            </map>
            <map to='#f27f26'>
              <bucket>&quot;Bethlehem, PA&quot;</bucket>
            </map>
            <map to='#f28026'>
              <bucket>&quot;Allentown, PA&quot;</bucket>
            </map>
            <map to='#f28026'>
              <bucket>&quot;Bethlehem, NJ&quot;</bucket>
            </map>
            <map to='#f28027'>
              <bucket>&quot;Allentown, NJ&quot;</bucket>
            </map>
            <map to='#f28127'>
              <bucket>&quot;Beloit,WI&quot;</bucket>
            </map>
            <map to='#f28127'>
              <bucket>&quot;Janesville,WI&quot;</bucket>
            </map>
            <map to='#f28127'>
              <bucket>&quot;Southwest Colorado nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#f28228'>
              <bucket>&quot;Marco Island,FL&quot;</bucket>
            </map>
            <map to='#f28228'>
              <bucket>&quot;Naples,FL&quot;</bucket>
            </map>
            <map to='#f28328'>
              <bucket>&quot;Ann Arbor,MI&quot;</bucket>
            </map>
            <map to='#f28328'>
              <bucket>&quot;Immokalee,FL&quot;</bucket>
            </map>
            <map to='#f28329'>
              <bucket>&quot;Troy,NY&quot;</bucket>
            </map>
            <map to='#f28429'>
              <bucket>&quot;Albany,NY&quot;</bucket>
            </map>
            <map to='#f28429'>
              <bucket>&quot;Peoria,IL&quot;</bucket>
            </map>
            <map to='#f28429'>
              <bucket>&quot;Schenectady,NY&quot;</bucket>
            </map>
            <map to='#f3852a'>
              <bucket>&quot;Redding,CA&quot;</bucket>
            </map>
            <map to='#f3852a'>
              <bucket>&quot;Worcester, CT&quot;</bucket>
            </map>
            <map to='#f3852a'>
              <bucket>&quot;Worcester, MA&quot;</bucket>
            </map>
            <map to='#f3862b'>
              <bucket>&quot;Conway,AR&quot;</bucket>
            </map>
            <map to='#f3862b'>
              <bucket>&quot;Little Rock,AR&quot;</bucket>
            </map>
            <map to='#f3862b'>
              <bucket>&quot;North Little Rock,AR&quot;</bucket>
            </map>
            <map to='#f3872c'>
              <bucket>&quot;Pueblo,CO&quot;</bucket>
            </map>
            <map to='#f3872c'>
              <bucket>&quot;Rock Island, IA&quot;</bucket>
            </map>
            <map to='#f3872c'>
              <bucket>&quot;Rock Island, IL&quot;</bucket>
            </map>
            <map to='#f3882c'>
              <bucket>&quot;Moline, IL&quot;</bucket>
            </map>
            <map to='#f3882d'>
              <bucket>&quot;Davenport, IL&quot;</bucket>
            </map>
            <map to='#f3882d'>
              <bucket>&quot;Moline, IA&quot;</bucket>
            </map>
            <map to='#f3892d'>
              <bucket>&quot;Davenport, IA&quot;</bucket>
            </map>
            <map to='#f3892e'>
              <bucket>&quot;Green Bay,WI&quot;</bucket>
            </map>
            <map to='#f3892e'>
              <bucket>&quot;Hammonton,NJ&quot;</bucket>
            </map>
            <map to='#f38a2e'>
              <bucket>&quot;Atlantic City,NJ&quot;</bucket>
            </map>
            <map to='#f38a2e'>
              <bucket>&quot;St. George,UT&quot;</bucket>
            </map>
            <map to='#f38a2f'>
              <bucket>&quot;Upper Savannah South Carolina nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#f38b2f'>
              <bucket>&quot;Memphis, MS&quot;</bucket>
            </map>
            <map to='#f38b2f'>
              <bucket>&quot;Memphis, TN&quot;</bucket>
            </map>
            <map to='#f38b30'>
              <bucket>&quot;Memphis, AR&quot;</bucket>
            </map>
            <map to='#f38c30'>
              <bucket>&quot;Jacksonville,FL&quot;</bucket>
            </map>
            <map to='#f38c30'>
              <bucket>&quot;Tampa,FL&quot;</bucket>
            </map>
            <map to='#f38c31'>
              <bucket>&quot;St. Petersburg,FL&quot;</bucket>
            </map>
            <map to='#f38d31'>
              <bucket>&quot;Clearwater,FL&quot;</bucket>
            </map>
            <map to='#f38d31'>
              <bucket>&quot;Greensboro,NC&quot;</bucket>
            </map>
            <map to='#f38d31'>
              <bucket>&quot;High Point,NC&quot;</bucket>
            </map>
            <map to='#f38e32'>
              <bucket>&quot;Oshkosh,WI&quot;</bucket>
            </map>
            <map to='#f48e32'>
              <bucket>&quot;Cincinnati, OH&quot;</bucket>
            </map>
            <map to='#f48e32'>
              <bucket>&quot;Neenah,WI&quot;</bucket>
            </map>
            <map to='#f48f33'>
              <bucket>&quot;Amarillo,TX&quot;</bucket>
            </map>
            <map to='#f48f33'>
              <bucket>&quot;Cincinnati, IN&quot;</bucket>
            </map>
            <map to='#f48f33'>
              <bucket>&quot;Cincinnati, KY&quot;</bucket>
            </map>
            <map to='#f49034'>
              <bucket>&quot;Ontario,CA&quot;</bucket>
            </map>
            <map to='#f49034'>
              <bucket>&quot;Riverside,CA&quot;</bucket>
            </map>
            <map to='#f49034'>
              <bucket>&quot;San Bernardino,CA&quot;</bucket>
            </map>
            <map to='#f49134'>
              <bucket>&quot;Northwest Colorado nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#f49135'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f49135'>
              <bucket>&quot;Fargo, MN&quot;</bucket>
            </map>
            <map to='#f49135'>
              <bucket>&quot;Fargo, ND&quot;</bucket>
            </map>
            <map to='#f49135'>
              <bucket>&quot;Santa Clara,CA&quot;</bucket>
            </map>
            <map to='#f49135'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f49235'>
              <bucket>&quot;Eau Claire,WI&quot;</bucket>
            </map>
            <map to='#f49236'>
              <bucket>&quot;Asheville,NC&quot;</bucket>
            </map>
            <map to='#f49236'>
              <bucket>&quot;Wausau,WI&quot;</bucket>
            </map>
            <map to='#f49336'>
              <bucket>&quot;Medford,OR&quot;</bucket>
            </map>
            <map to='#f49337'>
              <bucket>&quot;Barnstable Town,MA&quot;</bucket>
            </map>
            <map to='#f49337'>
              <bucket>&quot;Modesto,CA&quot;</bucket>
            </map>
            <map to='#f49437'>
              <bucket>&quot;Boise City,ID&quot;</bucket>
            </map>
            <map to='#f49437'>
              <bucket>&quot;Madison,WI&quot;</bucket>
            </map>
            <map to='#f49438'>
              <bucket>&quot;Greenville,NC&quot;</bucket>
            </map>
            <map to='#f49538'>
              <bucket>&quot;Roswell,GA&quot;</bucket>
            </map>
            <map to='#f49538'>
              <bucket>&quot;Sandy Springs,GA&quot;</bucket>
            </map>
            <map to='#f49539'>
              <bucket>&quot;Atlanta,GA&quot;</bucket>
            </map>
            <map to='#f49639'>
              <bucket>&quot;Rockford,IL&quot;</bucket>
            </map>
            <map to='#f49639'>
              <bucket>&quot;Virginia Beach, NC&quot;</bucket>
            </map>
            <map to='#f49639'>
              <bucket>&quot;Virginia Beach, VA&quot;</bucket>
            </map>
            <map to='#f4973a'>
              <bucket>&quot;Newport News, VA&quot;</bucket>
            </map>
            <map to='#f4973a'>
              <bucket>&quot;Norfolk, NC&quot;</bucket>
            </map>
            <map to='#f4973a'>
              <bucket>&quot;Norfolk, VA&quot;</bucket>
            </map>
            <map to='#f4cc63'>
              <bucket>&quot;Alexandria, DC&quot;</bucket>
            </map>
            <map to='#f4cc63'>
              <bucket>&quot;Tacoma,WA&quot;</bucket>
            </map>
            <map to='#f4cd63'>
              <bucket>&quot;Seattle,WA&quot;</bucket>
            </map>
            <map to='#f4cd64'>
              <bucket>&quot;Bellevue,WA&quot;</bucket>
            </map>
            <map to='#f4cd64'>
              <bucket>&quot;Stamford,CT&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Bristol, TN&quot;</bucket>
            </map>
            <map to='#f5983b'>
              <bucket>&quot;Newport News, NC&quot;</bucket>
            </map>
            <map to='#f5983b'>
              <bucket>&quot;Waukesha,WI&quot;</bucket>
            </map>
            <map to='#f5983b'>
              <bucket>&quot;West Allis,WI&quot;</bucket>
            </map>
            <map to='#f5993c'>
              <bucket>&quot;Milwaukee,WI&quot;</bucket>
            </map>
            <map to='#f5993c'>
              <bucket>&quot;Olympia,WA&quot;</bucket>
            </map>
            <map to='#f5993c'>
              <bucket>&quot;Tumwater,WA&quot;</bucket>
            </map>
            <map to='#f59a3c'>
              <bucket>&quot;West Des Moines,IA&quot;</bucket>
            </map>
            <map to='#f59a3d'>
              <bucket>&quot;Des Moines,IA&quot;</bucket>
            </map>
            <map to='#f59a3d'>
              <bucket>&quot;San Antonio,TX&quot;</bucket>
            </map>
            <map to='#f59b3d'>
              <bucket>&quot;New Braunfels,TX&quot;</bucket>
            </map>
            <map to='#f59b3e'>
              <bucket>&quot;Fayetteville,NC&quot;</bucket>
            </map>
            <map to='#f59b3e'>
              <bucket>&quot;Huntsville,AL&quot;</bucket>
            </map>
            <map to='#f59b3e'>
              <bucket>&quot;Wilmington, PA&quot;</bucket>
            </map>
            <map to='#f59c3f'>
              <bucket>&quot;Wilmington, DE&quot;</bucket>
            </map>
            <map to='#f59c3f'>
              <bucket>&quot;Wilmington, MD&quot;</bucket>
            </map>
            <map to='#f59c3f'>
              <bucket>&quot;Wilmington, NJ&quot;</bucket>
            </map>
            <map to='#f59d3f'>
              <bucket>&quot;Philadelphia, PA&quot;</bucket>
            </map>
            <map to='#f59d40'>
              <bucket>&quot;Philadelphia, MD&quot;</bucket>
            </map>
            <map to='#f59d40'>
              <bucket>&quot;Philadelphia, NJ&quot;</bucket>
            </map>
            <map to='#f5c761'>
              <bucket>&quot;Jersey City, NY&quot;</bucket>
            </map>
            <map to='#f5c861'>
              <bucket>&quot;Jersey City, NJ&quot;</bucket>
            </map>
            <map to='#f5c861'>
              <bucket>&quot;Trenton,NJ&quot;</bucket>
            </map>
            <map to='#f5c861'>
              <bucket>&quot;Washington, WV&quot;</bucket>
            </map>
            <map to='#f5c961'>
              <bucket>&quot;Washington, MD&quot;</bucket>
            </map>
            <map to='#f5c961'>
              <bucket>&quot;Washington, VA&quot;</bucket>
            </map>
            <map to='#f5c962'>
              <bucket>&quot;Washington, DC&quot;</bucket>
            </map>
            <map to='#f5ca62'>
              <bucket>&quot;Arlington, MD&quot;</bucket>
            </map>
            <map to='#f5ca62'>
              <bucket>&quot;Arlington, VA&quot;</bucket>
            </map>
            <map to='#f5ca62'>
              <bucket>&quot;Arlington, WV&quot;</bucket>
            </map>
            <map to='#f5cb62'>
              <bucket>&quot;Arlington, DC&quot;</bucket>
            </map>
            <map to='#f5cb63'>
              <bucket>&quot;Alexandria, VA&quot;</bucket>
            </map>
            <map to='#f5cb63'>
              <bucket>&quot;Alexandria, WV&quot;</bucket>
            </map>
            <map to='#f5cc63'>
              <bucket>&quot;Alexandria, MD&quot;</bucket>
            </map>
            <map to='#f69e40'>
              <bucket>&quot;Philadelphia, DE&quot;</bucket>
            </map>
            <map to='#f69e41'>
              <bucket>&quot;Camden, NJ&quot;</bucket>
            </map>
            <map to='#f69e41'>
              <bucket>&quot;Camden, PA&quot;</bucket>
            </map>
            <map to='#f69f41'>
              <bucket>&quot;Camden, MD&quot;</bucket>
            </map>
            <map to='#f69f42'>
              <bucket>&quot;Camden, DE&quot;</bucket>
            </map>
            <map to='#f69f42'>
              <bucket>&quot;Lexington Park,MD&quot;</bucket>
            </map>
            <map to='#f6a042'>
              <bucket>&quot;California,MD&quot;</bucket>
            </map>
            <map to='#f6a042'>
              <bucket>&quot;South Portland,ME&quot;</bucket>
            </map>
            <map to='#f6a043'>
              <bucket>&quot;Portland,ME&quot;</bucket>
            </map>
            <map to='#f6a143'>
              <bucket>&quot;Naperville, IN&quot;</bucket>
            </map>
            <map to='#f6a143'>
              <bucket>&quot;Naperville, WI&quot;</bucket>
            </map>
            <map to='#f6a144'>
              <bucket>&quot;Elgin, WI&quot;</bucket>
            </map>
            <map to='#f6a144'>
              <bucket>&quot;Naperville, IL&quot;</bucket>
            </map>
            <map to='#f6a244'>
              <bucket>&quot;Elgin, IL&quot;</bucket>
            </map>
            <map to='#f6a244'>
              <bucket>&quot;Elgin, IN&quot;</bucket>
            </map>
            <map to='#f6a245'>
              <bucket>&quot;Chicago, WI&quot;</bucket>
            </map>
            <map to='#f6a345'>
              <bucket>&quot;Chicago, IL&quot;</bucket>
            </map>
            <map to='#f6a345'>
              <bucket>&quot;Chicago, IN&quot;</bucket>
            </map>
            <map to='#f6a346'>
              <bucket>&quot;Corvallis,OR&quot;</bucket>
            </map>
            <map to='#f6c35e'>
              <bucket>&quot;Gastonia, SC&quot;</bucket>
            </map>
            <map to='#f6c35e'>
              <bucket>&quot;Santa Cruz,CA&quot;</bucket>
            </map>
            <map to='#f6c35f'>
              <bucket>&quot;Gastonia, NC&quot;</bucket>
            </map>
            <map to='#f6c45f'>
              <bucket>&quot;Charlotte, SC&quot;</bucket>
            </map>
            <map to='#f6c45f'>
              <bucket>&quot;Concord, NC&quot;</bucket>
            </map>
            <map to='#f6c45f'>
              <bucket>&quot;Concord, SC&quot;</bucket>
            </map>
            <map to='#f6c55f'>
              <bucket>&quot;Charlotte, NC&quot;</bucket>
            </map>
            <map to='#f6c55f'>
              <bucket>&quot;Newark, PA&quot;</bucket>
            </map>
            <map to='#f6c560'>
              <bucket>&quot;Newark, NY&quot;</bucket>
            </map>
            <map to='#f6c660'>
              <bucket>&quot;New York, NY&quot;</bucket>
            </map>
            <map to='#f6c660'>
              <bucket>&quot;New York, PA&quot;</bucket>
            </map>
            <map to='#f6c660'>
              <bucket>&quot;Newark, NJ&quot;</bucket>
            </map>
            <map to='#f6c760'>
              <bucket>&quot;Jersey City, PA&quot;</bucket>
            </map>
            <map to='#f6c760'>
              <bucket>&quot;New York, NJ&quot;</bucket>
            </map>
            <map to='#f7a446'>
              <bucket>&quot;Dallas,TX&quot;</bucket>
            </map>
            <map to='#f7a446'>
              <bucket>&quot;Fort Worth,TX&quot;</bucket>
            </map>
            <map to='#f7a447'>
              <bucket>&quot;Arlington,TX&quot;</bucket>
            </map>
            <map to='#f7a547'>
              <bucket>&quot;Greeley,CO&quot;</bucket>
            </map>
            <map to='#f7a547'>
              <bucket>&quot;Phoenix,AZ&quot;</bucket>
            </map>
            <map to='#f7a547'>
              <bucket>&quot;Scottsdale,AZ&quot;</bucket>
            </map>
            <map to='#f7a648'>
              <bucket>&quot;Akron,OH&quot;</bucket>
            </map>
            <map to='#f7a648'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f7a648'>
              <bucket>&quot;Mesa,AZ&quot;</bucket>
            </map>
            <map to='#f7a648'>
              <bucket>&quot;Salem,OR&quot;</bucket>
            </map>
            <map to='#f7a648'>
              <bucket>&quot;San Jose,CA&quot;</bucket>
            </map>
            <map to='#f7a649'>
              <bucket>&quot;Grand Junction,CO&quot;</bucket>
            </map>
            <map to='#f7a749'>
              <bucket>&quot;Denver,CO&quot;</bucket>
            </map>
            <map to='#f7a749'>
              <bucket>&quot;Lakewood,CO&quot;</bucket>
            </map>
            <map to='#f7a74a'>
              <bucket>&quot;Aurora,CO&quot;</bucket>
            </map>
            <map to='#f7a84a'>
              <bucket>&quot;Austin,TX&quot;</bucket>
            </map>
            <map to='#f7a84a'>
              <bucket>&quot;Round Rock,TX&quot;</bucket>
            </map>
            <map to='#f7a84a'>
              <bucket>&quot;West Hartford,CT&quot;</bucket>
            </map>
            <map to='#f7a94b'>
              <bucket>&quot;East Hartford,CT&quot;</bucket>
            </map>
            <map to='#f7a94b'>
              <bucket>&quot;Hartford,CT&quot;</bucket>
            </map>
            <map to='#f7a94b'>
              <bucket>&quot;Santa Rosa,CA&quot;</bucket>
            </map>
            <map to='#f7be5c'>
              <bucket>&quot;Oxnard,CA&quot;</bucket>
            </map>
            <map to='#f7be5c'>
              <bucket>&quot;San Diego,CA&quot;</bucket>
            </map>
            <map to='#f7be5c'>
              <bucket>&quot;Thousand Oaks,CA&quot;</bucket>
            </map>
            <map to='#f7bf5c'>
              <bucket>&quot;Carlsbad,CA&quot;</bucket>
            </map>
            <map to='#f7bf5c'>
              <bucket>&quot;Chapel Hill,NC&quot;</bucket>
            </map>
            <map to='#f7bf5c'>
              <bucket>&quot;Durham,NC&quot;</bucket>
            </map>
            <map to='#f7c05d'>
              <bucket>&quot;Providence, RI&quot;</bucket>
            </map>
            <map to='#f7c05d'>
              <bucket>&quot;Warwick, MA&quot;</bucket>
            </map>
            <map to='#f7c05d'>
              <bucket>&quot;Warwick, RI&quot;</bucket>
            </map>
            <map to='#f7c15d'>
              <bucket>&quot;Duluth, MN&quot;</bucket>
            </map>
            <map to='#f7c15d'>
              <bucket>&quot;Duluth, WI&quot;</bucket>
            </map>
            <map to='#f7c15d'>
              <bucket>&quot;Providence, MA&quot;</bucket>
            </map>
            <map to='#f7c25e'>
              <bucket>&quot;Santa Barbara,CA&quot;</bucket>
            </map>
            <map to='#f7c25e'>
              <bucket>&quot;Santa Maria,CA&quot;</bucket>
            </map>
            <map to='#f7c25e'>
              <bucket>&quot;Watsonville,CA&quot;</bucket>
            </map>
            <map to='#f8aa4c'>
              <bucket>&quot;Colorado Springs,CO&quot;</bucket>
            </map>
            <map to='#f8aa4c'>
              <bucket>&quot;Paso Robles,CA&quot;</bucket>
            </map>
            <map to='#f8aa4c'>
              <bucket>&quot;San Luis Obispo,CA&quot;</bucket>
            </map>
            <map to='#f8ab4c'>
              <bucket>&quot;Arroyo Grande,CA&quot;</bucket>
            </map>
            <map to='#f8ab4d'>
              <bucket>&quot;Bremerton,WA&quot;</bucket>
            </map>
            <map to='#f8ab4d'>
              <bucket>&quot;Silverdale,WA&quot;</bucket>
            </map>
            <map to='#f8ac4d'>
              <bucket>&quot;Wilmington,NC&quot;</bucket>
            </map>
            <map to='#f8ac4e'>
              <bucket>&quot;Fort Collins,CO&quot;</bucket>
            </map>
            <map to='#f8ac4e'>
              <bucket>&quot;St. Paul, WI&quot;</bucket>
            </map>
            <map to='#f8ad4e'>
              <bucket>&quot;Minneapolis, WI&quot;</bucket>
            </map>
            <map to='#f8ad4e'>
              <bucket>&quot;St. Paul, MN&quot;</bucket>
            </map>
            <map to='#f8ad4f'>
              <bucket>&quot;Minneapolis, MN&quot;</bucket>
            </map>
            <map to='#f8ae4f'>
              <bucket>&quot;Bloomington, MN&quot;</bucket>
            </map>
            <map to='#f8ae4f'>
              <bucket>&quot;Bloomington, WI&quot;</bucket>
            </map>
            <map to='#f8af50'>
              <bucket>&quot;Kingsport, TN&quot;</bucket>
            </map>
            <map to='#f8af50'>
              <bucket>&quot;Kingsport, VA&quot;</bucket>
            </map>
            <map to='#f8af50'>
              <bucket>&quot;Richmond,VA&quot;</bucket>
            </map>
            <map to='#f8b050'>
              <bucket>&quot;Spokane,WA&quot;</bucket>
            </map>
            <map to='#f8b051'>
              <bucket>&quot;Charlottesville,VA&quot;</bucket>
            </map>
            <map to='#f8b051'>
              <bucket>&quot;Spokane Valley,WA&quot;</bucket>
            </map>
            <map to='#f8b151'>
              <bucket>&quot;Salem,NC&quot;</bucket>
            </map>
            <map to='#f8b151'>
              <bucket>&quot;Winston,NC&quot;</bucket>
            </map>
            <map to='#f8b152'>
              <bucket>&quot;South Burlington,VT&quot;</bucket>
            </map>
            <map to='#f8b252'>
              <bucket>&quot;Burlington,VT&quot;</bucket>
            </map>
            <map to='#f8b252'>
              <bucket>&quot;New Bedford,MA&quot;</bucket>
            </map>
            <map to='#f8b253'>
              <bucket>&quot;Bismarck,ND&quot;</bucket>
            </map>
            <map to='#f8b353'>
              <bucket>&quot;Central Kentucky nonmetropolitan area&quot;</bucket>
            </map>
            <map to='#f8b353'>
              <bucket>&quot;Nashua, MA&quot;</bucket>
            </map>
            <map to='#f8b353'>
              <bucket>&quot;Nashua, NH&quot;</bucket>
            </map>
            <map to='#f8b454'>
              <bucket>&quot;Boston, NH&quot;</bucket>
            </map>
            <map to='#f8b454'>
              <bucket>&quot;Cambridge, MA&quot;</bucket>
            </map>
            <map to='#f8b454'>
              <bucket>&quot;Cambridge, NH&quot;</bucket>
            </map>
            <map to='#f8b555'>
              <bucket>&quot;Boston, MA&quot;</bucket>
            </map>
            <map to='#f8b555'>
              <bucket>&quot;Westerly, RI&quot;</bucket>
            </map>
            <map to='#f8b655'>
              <bucket>&quot;Norwich, RI&quot;</bucket>
            </map>
            <map to='#f8b655'>
              <bucket>&quot;Westerly, CT&quot;</bucket>
            </map>
            <map to='#f8b656'>
              <bucket>&quot;Norwich, CT&quot;</bucket>
            </map>
            <map to='#f8b756'>
              <bucket>&quot;New London, CT&quot;</bucket>
            </map>
            <map to='#f8b756'>
              <bucket>&quot;New London, RI&quot;</bucket>
            </map>
            <map to='#f8b757'>
              <bucket>&quot;Urban Honolulu,HI&quot;</bucket>
            </map>
            <map to='#f8b857'>
              <bucket>&quot;Anaheim,CA&quot;</bucket>
            </map>
            <map to='#f8b857'>
              <bucket>&quot;Long Beach,CA&quot;</bucket>
            </map>
            <map to='#f8b857'>
              <bucket>&quot;Los Angeles,CA&quot;</bucket>
            </map>
            <map to='#f8b958'>
              <bucket>&quot;Boulder,CO&quot;</bucket>
            </map>
            <map to='#f8b958'>
              <bucket>&quot;Pittsfield,MA&quot;</bucket>
            </map>
            <map to='#f8b958'>
              <bucket>&quot;Towson,MD&quot;</bucket>
            </map>
            <map to='#f8ba58'>
              <bucket>&quot;Columbia,MD&quot;</bucket>
            </map>
            <map to='#f8ba59'>
              <bucket>&quot;Baltimore,MD&quot;</bucket>
            </map>
            <map to='#f8ba59'>
              <bucket>&quot;Vancouver, WA&quot;</bucket>
            </map>
            <map to='#f8bb59'>
              <bucket>&quot;Vancouver, OR&quot;</bucket>
            </map>
            <map to='#f8bb5a'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#f8bb5a'>
              <bucket>&quot;Bristol, VA&quot;</bucket>
            </map>
            <map to='#f8bb5a'>
              <bucket>&quot;Portland, OR&quot;</bucket>
            </map>
            <map to='#f8bb5a'>
              <bucket>&quot;Portland, WA&quot;</bucket>
            </map>
            <map to='#f8bb5a'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f8bc5a'>
              <bucket>&quot;Hillsboro, OR&quot;</bucket>
            </map>
            <map to='#f8bc5a'>
              <bucket>&quot;Hillsboro, WA&quot;</bucket>
            </map>
            <map to='#f8bd5b'>
              <bucket>&quot;Dover,DE&quot;</bucket>
            </map>
            <map to='#f8bd5b'>
              <bucket>&quot;Raleigh,NC&quot;</bucket>
            </map>
            <map to='#f8bd5b'>
              <bucket>&quot;Ventura,CA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='ALL INDUSTRY' caption='TOP N' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL&quot;'>
          <calculation class='tableau' formula='&quot;ALL&quot;' />
          <aliases>
            <alias key='&quot;10&quot;' value='TOP 10' />
            <alias key='&quot;ALL&quot;' value='ALL INDUSTRY' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CITY' id='CITY_1671F003336D4F9D9661A722BC5E2C93'>
            <properties context=''>
              <relation connection='excel-direct.0rsg4x911qzeja11b2ssp1s9yyxh' name='CITY' table='[CITY$]' type='table'>
                <columns gridOrigin='A1:S627:no:A1:S627:0' header='yes' outcome='2'>
                  <column datatype='string' name='Area Name' ordinal='0' />
                  <column datatype='string' name='Type' ordinal='1' />
                  <column datatype='integer' name='Employment' ordinal='2' />
                  <column datatype='real' name='Employment percent relative standard error' ordinal='3' />
                  <column datatype='real' name='Hourly mean wage' ordinal='4' />
                  <column datatype='integer' name='Annual mean wage' ordinal='5' />
                  <column datatype='real' name='Wage percent relative standard error' ordinal='6' />
                  <column datatype='real' name='Hourly 10th percentile wage' ordinal='7' />
                  <column datatype='real' name='Hourly 25th percentile wage' ordinal='8' />
                  <column datatype='real' name='Hourly median wage' ordinal='9' />
                  <column datatype='real' name='Hourly 75th percentile wage' ordinal='10' />
                  <column datatype='real' name='Hourly 90th percentile wage' ordinal='11' />
                  <column datatype='integer' name='Annual 10th percentile wage' ordinal='12' />
                  <column datatype='integer' name='Annual 25th percentile wage' ordinal='13' />
                  <column datatype='integer' name='Annual median wage' ordinal='14' />
                  <column datatype='integer' name='Annual 75th percentile wage' ordinal='15' />
                  <column datatype='integer' name='Annual 90th percentile wage' ordinal='16' />
                  <column datatype='real' name='Employment per 1,000 jobs' ordinal='17' />
                  <column datatype='real' name='Location Quotient' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Data Scientists Projection)' inline='true' name='federated.15xsswm0to3ont1e7ebtz1nqi7t0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data Scientists Projection' name='excel-direct.0dlymk90ih5q010zxwr0d0lw3srf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/gagandeepsingh/Desktop/Gagan/Data Science - Projects/Github/Data-Visualization-Projects-Tableau/Project1 - Visualizing Data Scientists Salaries(USA)/Input/Data Scientists Projection.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dlymk90ih5q010zxwr0d0lw3srf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:K47:no:A1:K47:0' header='yes' outcome='2'>
            <column datatype='integer' name='State FIPS' ordinal='0' />
            <column datatype='string' name='Area Name' ordinal='1' />
            <column datatype='string' name='Occupation Code' ordinal='2' />
            <column datatype='string' name='Occupation Name' ordinal='3' />
            <column datatype='integer' name='Base Year' ordinal='4' />
            <column datatype='integer' name='Base' ordinal='5' />
            <column datatype='integer' name='Projected Year' ordinal='6' />
            <column datatype='integer' name='Projection' ordinal='7' />
            <column datatype='integer' name='Change' ordinal='8' />
            <column datatype='real' name='Percent Change' ordinal='9' />
            <column datatype='integer' name='Average Annual Openings' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dlymk90ih5q010zxwr0d0lw3srf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:K47:no:A1:K47:0' header='yes' outcome='2'>
            <column datatype='integer' name='State FIPS' ordinal='0' />
            <column datatype='string' name='Area Name' ordinal='1' />
            <column datatype='string' name='Occupation Code' ordinal='2' />
            <column datatype='string' name='Occupation Name' ordinal='3' />
            <column datatype='integer' name='Base Year' ordinal='4' />
            <column datatype='integer' name='Base' ordinal='5' />
            <column datatype='integer' name='Projected Year' ordinal='6' />
            <column datatype='integer' name='Projection' ordinal='7' />
            <column datatype='integer' name='Change' ordinal='8' />
            <column datatype='real' name='Percent Change' ordinal='9' />
            <column datatype='integer' name='Average Annual Openings' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K47:no:A1:K47:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State FIPS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State FIPS</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B71804EB659B45179D47780BA54696FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Area Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B71804EB659B45179D47780BA54696FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occupation Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Occupation Code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Occupation Code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B71804EB659B45179D47780BA54696FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occupation Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Occupation Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Occupation Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B71804EB659B45179D47780BA54696FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Base Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B71804EB659B45179D47780BA54696FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Base</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B71804EB659B45179D47780BA54696FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Projected Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Projected Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Projected Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B71804EB659B45179D47780BA54696FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Projection</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Projection]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Projection</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B71804EB659B45179D47780BA54696FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Change</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Change]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Change</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B71804EB659B45179D47780BA54696FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent Change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent Change]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percent Change</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B71804EB659B45179D47780BA54696FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Annual Openings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Average Annual Openings]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Average Annual Openings</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B71804EB659B45179D47780BA54696FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Base Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Base]' role='measure' type='quantitative' />
      <column caption='INDEX PROJECTION' datatype='integer' name='[Calculation_1864701412008718337]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='TOP10/ALL (PROJ)' datatype='boolean' name='[Calculation_1864701412008882179]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&apos;10&apos; THEN [Calculation_1864701412008718337]&lt;=10&#10;ELSE [Calculation_1864701412008718337]&gt;0  END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Projected Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Projection]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_B71804EB659B45179D47780BA54696FB]' role='measure' type='quantitative' />
      <column-instance column='[Base]' derivation='Sum' name='[sum:Base:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Projection]' derivation='Sum' name='[sum:Projection:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/2n/w8h0n0gs0kx8ms3njt22t3s40000gn/T/tableau-temp/#TableauTemp_09gsdv21solbgw1264jox1gh2p41.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/13/2024 11:05:42 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State FIPS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[State FIPS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State FIPS</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Area Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Area Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Area Name</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Occupation Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Occupation Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Occupation Code</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Occupation Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Occupation Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Occupation Name</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Base Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Base Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Base Year</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Base</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Base</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Projected Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Projected Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Projected Year</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Projection</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Projection]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Projection</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Change</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Change</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percent Change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percent Change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percent Change</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Annual Openings</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Average Annual Openings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Annual Openings</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='orange_gold_10_0' type='palette'>
            <map to='#9e3a26'>
              <bucket>&quot;[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Projection:qk]&quot;</bucket>
            </map>
            <map to='#eb6c1c'>
              <bucket>&quot;[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Base:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='ALL INDUSTRY' caption='TOP N' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL&quot;'>
          <calculation class='tableau' formula='&quot;ALL&quot;' />
          <aliases>
            <alias key='&quot;10&quot;' value='TOP 10' />
            <alias key='&quot;ALL&quot;' value='ALL INDUSTRY' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_B71804EB659B45179D47780BA54696FB'>
            <properties context=''>
              <relation connection='excel-direct.0dlymk90ih5q010zxwr0d0lw3srf' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:K47:no:A1:K47:0' header='yes' outcome='2'>
                  <column datatype='integer' name='State FIPS' ordinal='0' />
                  <column datatype='string' name='Area Name' ordinal='1' />
                  <column datatype='string' name='Occupation Code' ordinal='2' />
                  <column datatype='string' name='Occupation Name' ordinal='3' />
                  <column datatype='integer' name='Base Year' ordinal='4' />
                  <column datatype='integer' name='Base' ordinal='5' />
                  <column datatype='integer' name='Projected Year' ordinal='6' />
                  <column datatype='integer' name='Projection' ordinal='7' />
                  <column datatype='integer' name='Change' ordinal='8' />
                  <column datatype='real' name='Percent Change' ordinal='9' />
                  <column datatype='integer' name='Average Annual Openings' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='OES Sheet (Data Scientists Salary - By Industry)' inline='true' name='federated.0uuxfsw1wn60k4191i4lv1nz7e70' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data Scientists Salary - By Industry' name='excel-direct.0pdhjsy00bwsn41cpis0t02pn2ns'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/gagandeepsingh/Desktop/Gagan/Data Science - Projects/Github/Data-Visualization-Projects-Tableau/Project1 - Visualizing Data Scientists Salaries(USA)/Input/Data Scientists Salary - By Industry.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0pdhjsy00bwsn41cpis0t02pn2ns' name='OES Sheet' table='[&apos;OES Sheet$&apos;]' type='table'>
          <columns gridOrigin='A1:P285:no:A1:P285:0' header='yes' outcome='2'>
            <column datatype='string' name='Occupation' ordinal='0' />
            <column datatype='integer' name='Employment' ordinal='1' />
            <column datatype='real' name='Employment percent relative standard error' ordinal='2' />
            <column datatype='real' name='Hourly mean wage' ordinal='3' />
            <column datatype='integer' name='Annual mean wage' ordinal='4' />
            <column datatype='real' name='Wage percent relative standard error' ordinal='5' />
            <column datatype='real' name='Hourly 10th percentile wage' ordinal='6' />
            <column datatype='real' name='Hourly 25th percentile wage' ordinal='7' />
            <column datatype='real' name='Hourly median wage' ordinal='8' />
            <column datatype='real' name='Hourly 75th percentile wage' ordinal='9' />
            <column datatype='real' name='Hourly 90th percentile wage' ordinal='10' />
            <column datatype='integer' name='Annual 10th percentile wage' ordinal='11' />
            <column datatype='integer' name='Annual 25th percentile wage' ordinal='12' />
            <column datatype='integer' name='Annual median wage' ordinal='13' />
            <column datatype='integer' name='Annual 75th percentile wage' ordinal='14' />
            <column datatype='integer' name='Annual 90th percentile wage' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0pdhjsy00bwsn41cpis0t02pn2ns' name='OES Sheet' table='[&apos;OES Sheet$&apos;]' type='table'>
          <columns gridOrigin='A1:P285:no:A1:P285:0' header='yes' outcome='2'>
            <column datatype='string' name='Occupation' ordinal='0' />
            <column datatype='integer' name='Employment' ordinal='1' />
            <column datatype='real' name='Employment percent relative standard error' ordinal='2' />
            <column datatype='real' name='Hourly mean wage' ordinal='3' />
            <column datatype='integer' name='Annual mean wage' ordinal='4' />
            <column datatype='real' name='Wage percent relative standard error' ordinal='5' />
            <column datatype='real' name='Hourly 10th percentile wage' ordinal='6' />
            <column datatype='real' name='Hourly 25th percentile wage' ordinal='7' />
            <column datatype='real' name='Hourly median wage' ordinal='8' />
            <column datatype='real' name='Hourly 75th percentile wage' ordinal='9' />
            <column datatype='real' name='Hourly 90th percentile wage' ordinal='10' />
            <column datatype='integer' name='Annual 10th percentile wage' ordinal='11' />
            <column datatype='integer' name='Annual 25th percentile wage' ordinal='12' />
            <column datatype='integer' name='Annual median wage' ordinal='13' />
            <column datatype='integer' name='Annual 75th percentile wage' ordinal='14' />
            <column datatype='integer' name='Annual 90th percentile wage' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P285:no:A1:P285:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occupation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Occupation]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Occupation</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Employment]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Employment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment percent relative standard error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment percent relative standard error]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Employment percent relative standard error</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly mean wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly mean wage]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Hourly mean wage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual mean wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual mean wage]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Annual mean wage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wage percent relative standard error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wage percent relative standard error]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Wage percent relative standard error</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly 10th percentile wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly 10th percentile wage]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Hourly 10th percentile wage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly 25th percentile wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly 25th percentile wage]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Hourly 25th percentile wage</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly median wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly median wage]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Hourly median wage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly 75th percentile wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly 75th percentile wage]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Hourly 75th percentile wage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly 90th percentile wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly 90th percentile wage]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Hourly 90th percentile wage</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual 10th percentile wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual 10th percentile wage]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Annual 10th percentile wage</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual 25th percentile wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual 25th percentile wage]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Annual 25th percentile wage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual median wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual median wage]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Annual median wage</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual 75th percentile wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual 75th percentile wage]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Annual 75th percentile wage</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual 90th percentile wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual 90th percentile wage]</local-name>
            <parent-name>[OES Sheet]</parent-name>
            <remote-alias>Annual 90th percentile wage</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='TOP 10/ALL' datatype='boolean' name='[Calculation_1240812126002642944]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&apos;10&apos; THEN [Calculation_1240812126002827265]&lt;=10&#10;ELSE [Calculation_1240812126002827265]&gt;0  END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='INDEX' datatype='integer' name='[Calculation_1240812126002827265]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='OCCUPATION' datatype='string' name='[Occupation]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='OES Sheet' datatype='table' name='[__tableau_internal_object_id__].[OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/2n/w8h0n0gs0kx8ms3njt22t3s40000gn/T/tableau-temp/#TableauTemp_1kls8u30mkx4ql14k8dvr0r941ao.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/13/2024 11:06:05 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Occupation</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Occupation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Occupation</remote-alias>
              <ordinal>0</ordinal>
              <family>OES Sheet</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>284</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Employment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Employment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Employment</remote-alias>
              <ordinal>1</ordinal>
              <family>OES Sheet</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>135</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Employment percent relative standard error</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Employment percent relative standard error]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Employment percent relative standard error</remote-alias>
              <ordinal>2</ordinal>
              <family>OES Sheet</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>183</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hourly mean wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hourly mean wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hourly mean wage</remote-alias>
              <ordinal>3</ordinal>
              <family>OES Sheet</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>246</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual mean wage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual mean wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual mean wage</remote-alias>
              <ordinal>4</ordinal>
              <family>OES Sheet</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>254</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wage percent relative standard error</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Wage percent relative standard error]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wage percent relative standard error</remote-alias>
              <ordinal>5</ordinal>
              <family>OES Sheet</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>98</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hourly 10th percentile wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hourly 10th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hourly 10th percentile wage</remote-alias>
              <ordinal>6</ordinal>
              <family>OES Sheet</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>223</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hourly 25th percentile wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hourly 25th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hourly 25th percentile wage</remote-alias>
              <ordinal>7</ordinal>
              <family>OES Sheet</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>234</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hourly median wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hourly median wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hourly median wage</remote-alias>
              <ordinal>8</ordinal>
              <family>OES Sheet</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>230</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hourly 75th percentile wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hourly 75th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hourly 75th percentile wage</remote-alias>
              <ordinal>9</ordinal>
              <family>OES Sheet</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>237</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hourly 90th percentile wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hourly 90th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hourly 90th percentile wage</remote-alias>
              <ordinal>10</ordinal>
              <family>OES Sheet</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>224</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual 10th percentile wage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual 10th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual 10th percentile wage</remote-alias>
              <ordinal>11</ordinal>
              <family>OES Sheet</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual 25th percentile wage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual 25th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual 25th percentile wage</remote-alias>
              <ordinal>12</ordinal>
              <family>OES Sheet</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual median wage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual median wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual median wage</remote-alias>
              <ordinal>13</ordinal>
              <family>OES Sheet</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>232</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual 75th percentile wage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual 75th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual 75th percentile wage</remote-alias>
              <ordinal>14</ordinal>
              <family>OES Sheet</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual 90th percentile wage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual 90th percentile wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual 90th percentile wage</remote-alias>
              <ordinal>15</ordinal>
              <family>OES Sheet</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>232</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='ALL INDUSTRY' caption='TOP N' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL&quot;'>
          <calculation class='tableau' formula='&quot;ALL&quot;' />
          <aliases>
            <alias key='&quot;10&quot;' value='TOP 10' />
            <alias key='&quot;ALL&quot;' value='ALL INDUSTRY' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='OES Sheet' id='OES Sheet_BE1F0F20B80A494E8466755BDE19ECE8'>
            <properties context=''>
              <relation connection='excel-direct.0pdhjsy00bwsn41cpis0t02pn2ns' name='OES Sheet' table='[&apos;OES Sheet$&apos;]' type='table'>
                <columns gridOrigin='A1:P285:no:A1:P285:0' header='yes' outcome='2'>
                  <column datatype='string' name='Occupation' ordinal='0' />
                  <column datatype='integer' name='Employment' ordinal='1' />
                  <column datatype='real' name='Employment percent relative standard error' ordinal='2' />
                  <column datatype='real' name='Hourly mean wage' ordinal='3' />
                  <column datatype='integer' name='Annual mean wage' ordinal='4' />
                  <column datatype='real' name='Wage percent relative standard error' ordinal='5' />
                  <column datatype='real' name='Hourly 10th percentile wage' ordinal='6' />
                  <column datatype='real' name='Hourly 25th percentile wage' ordinal='7' />
                  <column datatype='real' name='Hourly median wage' ordinal='8' />
                  <column datatype='real' name='Hourly 75th percentile wage' ordinal='9' />
                  <column datatype='real' name='Hourly 90th percentile wage' ordinal='10' />
                  <column datatype='integer' name='Annual 10th percentile wage' ordinal='11' />
                  <column datatype='integer' name='Annual 25th percentile wage' ordinal='12' />
                  <column datatype='integer' name='Annual median wage' ordinal='13' />
                  <column datatype='integer' name='Annual 75th percentile wage' ordinal='14' />
                  <column datatype='integer' name='Annual 90th percentile wage' ordinal='15' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1 - Data Scientists Salary - By Industry'>
      <table>
        <view>
          <datasources>
            <datasource caption='OES Sheet (Data Scientists Salary - By Industry)' name='federated.0uuxfsw1wn60k4191i4lv1nz7e70' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ALL INDUSTRY' caption='TOP N' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL&quot;'>
              <calculation class='tableau' formula='&quot;ALL&quot;' />
              <aliases>
                <alias key='&quot;10&quot;' value='TOP 10' />
                <alias key='&quot;ALL&quot;' value='ALL INDUSTRY' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0uuxfsw1wn60k4191i4lv1nz7e70'>
            <column datatype='integer' name='[Annual median wage]' role='measure' type='quantitative' />
            <column caption='TOP 10/ALL' datatype='boolean' name='[Calculation_1240812126002642944]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&apos;10&apos; THEN [Calculation_1240812126002827265]&lt;=10&#10;ELSE [Calculation_1240812126002827265]&gt;0  END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='INDEX' datatype='integer' name='[Calculation_1240812126002827265]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='OCCUPATION' datatype='string' name='[Occupation]' role='dimension' type='nominal' />
            <column-instance column='[Occupation]' derivation='None' name='[none:Occupation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Annual median wage]' derivation='Sum' name='[sum:Annual median wage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1240812126002642944]' derivation='User' name='[usr:Calculation_1240812126002642944:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[Calculation_1240812126002827265]' ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[none:Occupation:nk]' direction='DESC' using='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[sum:Annual median wage:qk]' />
          <filter class='categorical' column='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[usr:Calculation_1240812126002642944:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_1240812126002642944:nk:1]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[usr:Calculation_1240812126002642944:nk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[sum:Annual median wage:qk]' scope='cols' value='false' />
            <format attr='tick-color' value='#00000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' value='left' />
            <format attr='text-orientation' data-class='subtotal' scope='rows' value='-90' />
            <format attr='text-format' field='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[sum:Annual median wage:qk]' value='c&quot;$&quot;#,##0,.00K;-&quot;$&quot;#,##0,.00K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[none:Occupation:nk]' value='220' />
            <format attr='text-align' data-class='total' value='left' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='left' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[sum:Annual median wage:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[usr:Calculation_1240812126002642944:nk:1]' value='TOP N'>
              <formatted-text>
                <run>TOP N</run>
              </formatted-text>
            </format>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[sum:Annual median wage:qk]' />
              <text column='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[sum:Annual median wage:qk]' />
              <lod column='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[usr:Calculation_1240812126002642944:nk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[none:Occupation:nk]</rows>
        <cols>[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[sum:Annual median wage:qk]</cols>
      </table>
      <simple-id uuid='{6823F1BB-A798-4B1B-A703-749F5614A656}' />
    </worksheet>
    <worksheet name='2 - KPI Annual Mean Wage'>
      <table>
        <view>
          <datasources>
            <datasource caption='CITY (Data Scientist Salary - By Geography)' name='federated.1hdudvf04xs14l1b8g2ri02oc6xp' />
          </datasources>
          <datasource-dependencies datasource='federated.1hdudvf04xs14l1b8g2ri02oc6xp'>
            <column datatype='integer' name='[Annual median wage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Annual median wage]' derivation='Sum' name='[sum:Annual median wage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Type:nk]'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;NATIONAL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='51' />
            <format attr='width' value='136' />
            <format attr='cell-w' value='24' />
            <format attr='cell-h' value='8' />
            <format attr='cell' value='8' />
            <format attr='cell-q' value='40' />
            <format attr='text-align' value='left' />
            <format attr='text-format' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]' value='c&quot;$&quot;#,##0,.00K;-&quot;$&quot;#,##0,.00K' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='font-size' value='20' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#ffffff' />
            <format attr='font-size' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Medium'><![CDATA[<[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{72684671-37F9-4405-9F8C-82AE10D4DD8E}' />
    </worksheet>
    <worksheet name='3 - KPI Total Employed'>
      <table>
        <view>
          <datasources>
            <datasource caption='CITY (Data Scientist Salary - By Geography)' name='federated.1hdudvf04xs14l1b8g2ri02oc6xp' />
          </datasources>
          <datasource-dependencies datasource='federated.1hdudvf04xs14l1b8g2ri02oc6xp'>
            <column datatype='integer' name='[Employment]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Employment]' derivation='Sum' name='[sum:Employment:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Type:nk]'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;NATIONAL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='60' />
            <format attr='width' value='131' />
            <format attr='cell-w' value='24' />
            <format attr='cell-h' value='8' />
            <format attr='cell' value='8' />
            <format attr='cell-q' value='40' />
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='font-size' value='20' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#ffffff' />
            <format attr='font-size' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Employment:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Medium'>&lt;</run>
                <run fontname='Tableau Medium'>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Employment:qk]</run>
                <run fontname='Tableau Medium'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DD2BA550-0A18-47E5-B1F7-60844C949334}' />
    </worksheet>
    <worksheet name='4 - Employment per 1000 jobs'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CITY (Data Scientist Salary - By Geography)' name='federated.1hdudvf04xs14l1b8g2ri02oc6xp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ALL INDUSTRY' caption='TOP N' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL&quot;'>
              <calculation class='tableau' formula='&quot;ALL&quot;' />
              <aliases>
                <alias key='&quot;10&quot;' value='TOP 10' />
                <alias key='&quot;ALL&quot;' value='ALL INDUSTRY' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1hdudvf04xs14l1b8g2ri02oc6xp'>
            <column datatype='string' name='[Area Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='TOP 10/ALL (CITY)' datatype='boolean' name='[Calculation_1313151195044061185]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&apos;10&apos; THEN [Calculation_1313151195044151298]&lt;=10&#10;ELSE [Calculation_1313151195044151298]&gt;0  END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='INDEX CITY' datatype='integer' name='[Calculation_1313151195044151298]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Employment per 1,000 jobs]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area Name]' derivation='None' name='[none:Area Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Employment per 1,000 jobs]' derivation='Sum' name='[sum:Employment per 1,000 jobs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1313151195044061185]' derivation='User' name='[usr:Calculation_1313151195044061185:nk:2]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Area Name]' ordering-type='Field' />
              <table-calc field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Calculation_1313151195044151298]' ordering-field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Area Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1313151195044061185]' derivation='User' name='[usr:Calculation_1313151195044061185:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' ordering-type='Field' />
              <table-calc field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Calculation_1313151195044151298]' ordering-field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Type:nk]'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;STATE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:2]'>
            <groupfilter function='member' level='[usr:Calculation_1313151195044061185:nk:2]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]'>
            <groupfilter function='level-members' level='[usr:Calculation_1313151195044061185:nk:3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Type:nk]</column>
            <column>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:2]</column>
            <column>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Employment per 1,000 jobs:qk]' value='#000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='491' />
            <format attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#ffffff' />
            <format attr='color' value='#ffffff' />
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Employment per 1,000 jobs:qk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#ffffff' />
            <format attr='border-width' scope='rows' value='1' />
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#ffffff' />
            <format attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Employment per 1,000 jobs:qk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Employment per 1,000 jobs:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='background-color' data-class='total' value='#000000' />
            <format attr='background-color' data-class='subtotal' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='font-size' value='7' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]' value='TOP 10'>
              <formatted-text>
                <run fontcolor='#000000'>TOP 10</run>
              </formatted-text>
            </format>
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]' value='#000000' />
            <format attr='title' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:2]' value='TOP 10'>
              <formatted-text>
                <run fontcolor='#000000'>TOP 10</run>
              </formatted-text>
            </format>
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:2]' value='#000000' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='quick-filter-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]' value='#000000' />
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:2]' value='#000000' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Employment per 1,000 jobs:qk]' />
              <color column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Employment per 1,000 jobs:qk]' />
              <text column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' />
              <text column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Employment per 1,000 jobs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{44778F3C-7EB1-44FF-A805-DDA31FD0C800}' />
    </worksheet>
    <worksheet name='4 - States with max jobs'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CITY (Data Scientist Salary - By Geography)' name='federated.1hdudvf04xs14l1b8g2ri02oc6xp' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ALL INDUSTRY' caption='TOP N' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL&quot;'>
              <calculation class='tableau' formula='&quot;ALL&quot;' />
              <aliases>
                <alias key='&quot;10&quot;' value='TOP 10' />
                <alias key='&quot;ALL&quot;' value='ALL INDUSTRY' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1hdudvf04xs14l1b8g2ri02oc6xp'>
            <column datatype='integer' name='[Annual 10th percentile wage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Annual 25th percentile wage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Annual 75th percentile wage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Annual 90th percentile wage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Annual median wage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Area Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='TOP 10/ALL (CITY)' datatype='boolean' name='[Calculation_1313151195044061185]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&apos;10&apos; THEN [Calculation_1313151195044151298]&lt;=10&#10;ELSE [Calculation_1313151195044151298]&gt;0  END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='INDEX CITY' datatype='integer' name='[Calculation_1313151195044151298]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area Name]' derivation='None' name='[none:Area Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Annual 10th percentile wage]' derivation='Sum' name='[sum:Annual 10th percentile wage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Annual 25th percentile wage]' derivation='Sum' name='[sum:Annual 25th percentile wage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Annual 75th percentile wage]' derivation='Sum' name='[sum:Annual 75th percentile wage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Annual 90th percentile wage]' derivation='Sum' name='[sum:Annual 90th percentile wage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Annual median wage]' derivation='Sum' name='[sum:Annual median wage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1313151195044061185]' derivation='User' name='[usr:Calculation_1313151195044061185:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' ordering-type='Field' />
              <table-calc field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Calculation_1313151195044151298]' ordering-field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 10th percentile wage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 25th percentile wage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 75th percentile wage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 90th percentile wage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 10th percentile wage:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 25th percentile wage:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 75th percentile wage:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 90th percentile wage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' direction='DESC' using='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]' />
          <filter class='categorical' column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Type:nk]'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;STATE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]'>
            <groupfilter function='member' level='[usr:Calculation_1313151195044061185:nk:3]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Type:nk]</column>
            <column>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]</column>
            <column>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Multiple Values]' field-type='quantitative' fold='true' scope='cols' type='space' />
            <format attr='display' class='1' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Multiple Values]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Multiple Values]' scope='cols' value='false' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='19' />
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#000000' />
            <format attr='color' value='#ffffff' />
            <format attr='text-format' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 10th percentile wage:qk]' value='c&quot;$&quot;#,##0,.00K;-&quot;$&quot;#,##0,.00K' />
            <format attr='text-format' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 25th percentile wage:qk]' value='c&quot;$&quot;#,##0,.00K;-&quot;$&quot;#,##0,.00K' />
            <format attr='text-format' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]' value='c&quot;$&quot;#,##0,.00K;-&quot;$&quot;#,##0,.00K' />
            <format attr='text-format' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 75th percentile wage:qk]' value='n#,##0,.00K;-#,##0,.00K' />
            <format attr='text-format' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual 90th percentile wage:qk]' value='c&quot;$&quot;#,##0,.00K;-&quot;$&quot;#,##0,.00K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' scope='rows' value='1' />
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='color' data-class='total' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#000000' />
            <format attr='color' data-class='subtotal' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='background-color' scope='cols' value='#000000' />
            <format attr='background-color' scope='rows' value='#000000' />
            <format attr='background-color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[:Measure Names]' value='#000000' />
            <format attr='background-color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#000000' />
            <format attr='background-color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Multiple Values]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='10' />
            <format attr='color' scope='cols' value='#ffffff' />
            <format attr='color' scope='rows' value='#ffffff' />
            <format attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='background-color' value='#000000' />
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='7' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]' value='TOP 10'>
              <formatted-text>
                <run>TOP 10</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Multiple Values]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <path column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]</rows>
        <cols>([federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Multiple Values] + [federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{16D7479F-D64A-4B80-80AB-7E97CBB3FCDC}' />
    </worksheet>
    <worksheet name='5 - Cities with max salaries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CITY (Data Scientist Salary - By Geography)' name='federated.1hdudvf04xs14l1b8g2ri02oc6xp' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ALL INDUSTRY' caption='TOP N' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL&quot;'>
              <calculation class='tableau' formula='&quot;ALL&quot;' />
              <aliases>
                <alias key='&quot;10&quot;' value='TOP 10' />
                <alias key='&quot;ALL&quot;' value='ALL INDUSTRY' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1hdudvf04xs14l1b8g2ri02oc6xp'>
            <column datatype='integer' name='[Annual median wage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Area Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='TOP 10/ALL (CITY)' datatype='boolean' name='[Calculation_1313151195044061185]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&apos;10&apos; THEN [Calculation_1313151195044151298]&lt;=10&#10;ELSE [Calculation_1313151195044151298]&gt;0  END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='INDEX CITY' datatype='integer' name='[Calculation_1313151195044151298]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area Name]' derivation='None' name='[none:Area Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Annual median wage]' derivation='Sum' name='[sum:Annual median wage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1313151195044061185]' derivation='User' name='[usr:Calculation_1313151195044061185:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' ordering-type='Field' />
              <table-calc field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[Calculation_1313151195044151298]' ordering-field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' direction='DESC' using='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]' />
          <filter class='categorical' column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Type:nk]'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;CITY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]'>
            <groupfilter function='member' level='[usr:Calculation_1313151195044061185:nk:3]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Type:nk]</column>
            <column>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#000000' />
            <format attr='color' value='#ffffff' />
            <format attr='text-format' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]' value='c&quot;$&quot;#,##0,.00K;-&quot;$&quot;#,##0,.00K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' scope='rows' value='1' />
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='color' data-class='total' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#000000' />
            <format attr='color' data-class='subtotal' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='background-color' scope='cols' value='#000000' />
            <format attr='background-color' scope='rows' value='#000000' />
            <format attr='background-color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='10' />
            <format attr='color' scope='cols' value='#ffffff' />
            <format attr='color' scope='rows' value='#ffffff' />
            <format attr='color' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' value='#ffffff' />
            <format attr='text-format' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]' value='c&quot;$&quot;#,##0,.00K;-&quot;$&quot;#,##0,.00K' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='background-color' value='#000000' />
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='7' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]' value='TOP 10'>
              <formatted-text>
                <run>TOP 10</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]' />
              <text column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' />
              <text column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Annual median wage:qk]' />
              <color column='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{25AD2D70-924A-40FF-AA05-024ECBF4FD00}' />
    </worksheet>
    <worksheet name='6 - Projection'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data Scientists Projection)' name='federated.15xsswm0to3ont1e7ebtz1nqi7t0' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ALL INDUSTRY' caption='TOP N' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL&quot;'>
              <calculation class='tableau' formula='&quot;ALL&quot;' />
              <aliases>
                <alias key='&quot;10&quot;' value='TOP 10' />
                <alias key='&quot;ALL&quot;' value='ALL INDUSTRY' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.15xsswm0to3ont1e7ebtz1nqi7t0'>
            <column datatype='string' name='[Area Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Base]' role='measure' type='quantitative' />
            <column caption='INDEX PROJECTION' datatype='integer' name='[Calculation_1864701412008718337]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='TOP10/ALL (PROJ)' datatype='boolean' name='[Calculation_1864701412008882179]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&apos;10&apos; THEN [Calculation_1864701412008718337]&lt;=10&#10;ELSE [Calculation_1864701412008718337]&gt;0  END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Projection]' role='measure' type='quantitative' />
            <column-instance column='[Area Name]' derivation='None' name='[none:Area Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Base]' derivation='Sum' name='[sum:Base:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Projection]' derivation='Sum' name='[sum:Projection:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1864701412008882179]' derivation='User' name='[usr:Calculation_1864701412008882179:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[Calculation_1864701412008718337]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[none:Area Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Virgin Islands&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:Area Name:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[usr:Calculation_1864701412008882179:nk]'>
            <groupfilter function='member' level='[usr:Calculation_1864701412008882179:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[none:Area Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Base:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[none:Area Name:nk]</column>
            <column>[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[usr:Calculation_1864701412008882179:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Projection:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Projection:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Base:qk]' field-type='quantitative' max='46000' min='-2533' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Base:qk]' scope='rows' value='false' />
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' value='0' />
            <format attr='font-size' value='6' />
            <format attr='text-format' field='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Base:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='text-format' field='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Projection:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='text-orientation' field='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Projection:qk]' value='0' />
            <format attr='text-align' field='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Projection:qk]' value='center' />
            <format attr='vertical-align' field='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Projection:qk]' value='top' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#f2f2f200' />
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Base:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[:Measure Names]' />
              <text column='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Base:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Base:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Projection:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[:Measure Names]' />
              <text column='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Projection:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Base:qk] + [federated.15xsswm0to3ont1e7ebtz1nqi7t0].[sum:Projection:qk])</rows>
        <cols>[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[none:Area Name:nk]</cols>
      </table>
      <simple-id uuid='{6C8EF2B6-B1CF-4F68-909A-1403836145D0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Data Scientist Salaries'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='ALL INDUSTRY' caption='TOP N' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL&quot;'>
          <calculation class='tableau' formula='&quot;ALL&quot;' />
          <aliases>
            <alias key='&quot;10&quot;' value='TOP 10' />
            <alias key='&quot;ALL&quot;' value='ALL INDUSTRY' />
          </aliases>
          <members>
            <member alias='TOP 10' value='&quot;10&quot;' />
            <member alias='ALL INDUSTRY' value='&quot;ALL&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='124611' id='1' is-centered='0' param='/Users/gagandeepsingh/Downloads/Black Backgrounf.png' type-v2='bitmap' w='113087' x='-13087' y='-15276' />
        <zone h='26557' id='3' name='1 - Data Scientists Salary - By Industry' show-title='false' w='36140' x='41223' y='15121' />
        <zone forceUpdate='true' h='4320' id='17' type-v2='text' w='21048' x='41064' y='11055'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>SALARIES BY INDUSTRY</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='9250' id='25' type-v2='text' w='90167' x='167' y='875'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='26'>DATA SCIENTIST JOBS &amp; SALARIES : A NATIONWIDE OVERVIEW</run>
            <run>Æ&#10;</run>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='10'>Unveiling salary trends and job concentrations to understand where Data Scientists flourish the most</run>
          </formatted-text>
        </zone>
        <zone h='7497' id='29' name='2 - KPI Annual Mean Wage' show-title='false' w='11994' x='11597' y='17154' />
        <zone h='9335' id='32' name='3 - KPI Total Employed' show-title='false' w='11873' x='880' y='16690' />
        <zone h='38119' id='37' name='4 - Employment per 1000 jobs' show-title='false' w='36775' x='41144' y='45362' />
        <zone forceUpdate='true' h='3678' id='40' type-v2='text' w='29727' x='41425' y='41443'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>JOB OPPORTUNITIES PER 1000 JOBS</run>
          </formatted-text>
        </zone>
        <zone h='24752' id='42' name='4 - States with max jobs' show-title='false' w='38812' x='244' y='33522' />
        <zone h='37865' id='66' name='5 - Cities with max salaries' show-title='false' w='38602' x='556' y='59212' />
        <zone h='4809' id='73' type-v2='text' w='13193' x='6332' y='11881'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='20'>OVERVIEW</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5972' id='74' type-v2='text' w='9929' x='318' y='23126'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='12'>TOTAL EMPLOYMENT</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3812' id='77' type-v2='text' w='12311' x='11199' y='24905'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='12'>MEDIAN SALARY</run>
          </formatted-text>
        </zone>
        <zone h='3819' id='82' type-v2='text' w='27529' x='5365' y='29279'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>STATE SALARIES BY PERCENTILES</run>
          </formatted-text>
        </zone>
        <zone h='3304' id='91' mode='compact' param='[Parameters].[Parameter 1]' show-title='false' type-v2='paramctrl' w='12708' x='28435' y='22745' />
        <zone forceUpdate='true' h='3812' id='92' type-v2='text' w='7943' x='29230' y='18679'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>FILTER</run>
          </formatted-text>
        </zone>
        <zone h='71287' id='95' name='6 - Projection' show-title='false' w='20016' x='79746' y='21499' />
        <zone h='5375' id='98' name='6 - Projection' pane-specification-id='1' param='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[:Measure Names]' show-title='false' type-v2='color' w='7149' x='92137' y='23904' />
        <zone forceUpdate='true' h='11174' id='99' type-v2='text' w='20175' x='79031' y='11315'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontsize='14'>PROJECTED(2032) VS BASE(2022)  DS BY STATE</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='7751' id='109' type-v2='text' w='25338' x='41541' y='86785'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='8'>Data Sources : </run>
            <run>Æ&#10;</run>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='8'>BLS (Data Scientists Salary as of May, 2023)</run>
            <run>Æ&#10;</run>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='8'>CareerOneStop(Sponsored by Department of Labor)</run>
            <run>Æ&#10;</run>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='6'>** 2024 salaries have not been published</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='11690' id='120' type-v2='text' w='7069' x='32327' y='85133'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='12'>CITIES BY HIGHEST MEDIAN SALARIES</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3812' id='143' type-v2='text' w='17633' x='41461' y='83227'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='8'>Created by : Gagandeep Singh Khanuja</run>
          </formatted-text>
        </zone>
        <zone h='3375' id='144' is-centered='0' is-scaled='1' param='/Users/gagandeepsingh/Downloads/LinkedIn-Logos/LI-In-Bug.png' type-v2='bitmap' url='www.linkedin.com/in/gagandeepsinghkhanuja' w='2000' x='58667' y='83875' />
        <zone h='250' id='145' param='vert' type-v2='layout-flow' w='104917' x='-1250' y='10750'>
          <zone-style>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#f5f5f5' />
          </zone-style>
        </zone>
        <zone h='250' id='146' param='vert' type-v2='layout-flow' w='42750' x='-1500' y='29375'>
          <zone-style>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone' />
      </devicelayouts>
      <simple-id uuid='{F853BC93-A443-4A6F-8378-D8F99BCB38BD}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='dashboard' maximized='true' name='Data Scientist Salaries'>
      <viewpoints>
        <viewpoint name='1 - Data Scientists Salary - By Industry' />
        <viewpoint name='2 - KPI Annual Mean Wage' />
        <viewpoint name='3 - KPI Total Employed' />
        <viewpoint name='4 - Employment per 1000 jobs'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='4 - States with max jobs'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='5 - Cities with max salaries'>
          <zoom type='fit-width' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='6 - Projection'>
          <zoom type='fit-height' />
          <highlight field='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
      <device-preview visible='true'>
        <device name='iPad Pro 12.9-inch' type='Desktop' />
      </device-preview>
      <simple-id uuid='{CCD0BF21-FDD3-470B-BC56-F1346F8DFB41}' />
    </window>
    <window class='worksheet' hidden='true' name='1 - Data Scientists Salary - By Industry'>
      <cards>
        <edge name='left'>
          <strip size='213'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[usr:Calculation_1240812126002642944:nk:1]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='1' param='[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[sum:Annual median wage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0uuxfsw1wn60k4191i4lv1nz7e70].[sum:Annual median wage:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6316703-3460-4C83-87C5-1398728266AA}' />
    </window>
    <window class='worksheet' hidden='true' name='2 - KPI Annual Mean Wage'>
      <cards>
        <edge name='left'>
          <strip size='290'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{69F9623C-E311-4080-AA76-39A73351A83E}' />
    </window>
    <window class='worksheet' hidden='true' name='3 - KPI Total Employed'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6326750C-CD37-4FFF-BECB-FBBB893B485B}' />
    </window>
    <window class='worksheet' hidden='true' name='4 - Employment per 1000 jobs'>
      <cards>
        <edge name='left'>
          <strip size='255'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:2]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[sum:Employment per 1,000 jobs:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BE6F003C-386F-4643-B6D4-560E66DD68B9}' />
    </window>
    <window class='worksheet' hidden='true' name='4 - States with max jobs'>
      <cards>
        <edge name='left'>
          <strip size='255'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='6' param='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{43088FBC-19C1-467B-8496-F55B93DEC5FA}' />
    </window>
    <window class='worksheet' hidden='true' name='5 - Cities with max salaries'>
      <cards>
        <edge name='left'>
          <strip size='255'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[usr:Calculation_1313151195044061185:nk:3]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hdudvf04xs14l1b8g2ri02oc6xp].[none:Area Name:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{4F4A2419-1B00-4376-905E-473595474951}' />
    </window>
    <window class='worksheet' hidden='true' name='6 - Projection'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[none:Area Name:nk]</field>
            <field>[federated.15xsswm0to3ont1e7ebtz1nqi7t0].[usr:Calculation_1864701412008882179:nk:1]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{BE502757-E0B1-4F4A-91D6-5739F4899A8C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Data Scientist Salaries' width='384'>
      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
      M6fddjfPTy6Xiw8++KB45swZ0dfXVzq+fv16saamRszLyxNvvfVWERB1Op24c+dO0WQyiSdP
      nhT79+8vAqK/v7/Ijf5BXuvXpTeu99X7+j2/3n77bXHt2rUiIP7yyy/i+++/L2q1WnH69Oli
      RUWF6OXlJQJiWlqaGBoaKvbp00d86aWXxOjo6Bb5vPTSS2JUVJTo4uIi+vj4iImJieL8+fOl
      tNOmTRMDAgLEH374Qdy0aVO7x/V6vVhYWCguXLhQtLKyElevXi2ePXtWlMvlore3t1hSUiJ6
      eHiIo0aNEk+dOiUuXrxYNBqNopeXl/jJJ5+Ib7/9tujl5SUajUbx6aefFj/99FOpjs8++2yL
      srOzs8UpU6aIgLhp0ybxsccek+7DvffeK2o0GtHLy0tcunSpePjwYdHLy0t0cWl8eKqvrxdd
      XFxEb29vsbCwUPTw8JBecrlcfP/998WNGzeKOp1OHDJkiBgREdHifn322Wfi2rVrxf79+4uv
      vPKKGB8fL9VrypQpUl5arbbddjfPb+PGjeK+ffvEkpKSpo5cHDdunJibmyv27dtXvOuuu8S8
      vDxRqVSKL7/8srhnzx5Rq9WKf/vb36SB8NdffxX/5+dc3eWt2Esv/0vY2dkxYcIEVq1aRVVV
      FT///DM//vgjd9xxh3RNUVGRZNXTZL7YxNy5c3nllVfIzc0lMTGRt956i3vuuUc6n5OTQ1xc
      HF9//XWLePyXHp8yZQrJycl8+umn1NTU8MYbb6DX6yX9D7PZTHp6OlFRUezZs4f+/ftTWlpK
      SkoKpaWlLT5fiTfffJO1a9e2e762tpaUlBRyc3NbfL4Ui8UiGaGkp6djNpsRRRFPT09sbGw4
      deoUmzdvbpWuqKiIpKQk3n//fQYMGCAtn2VnZ0t5NUnYttXu5qxbt47w8PAW7Z48eTI//PAD
      GRkZbNmyBZPJxJAhQ5g0aRIffvghVVVVbNq0icmTJ6NQKBg/fvyN3wTupXvR2rpg6+5LfU0F
      hWlxWExXFwxNoxAY76vFQSsnKq2GxILOSUteikwpw9nfEbVORVFSMRW53afRrJbJGOvsjJ1a
      zbHCoi6v81sZbPC8IO6SduIkNWXdo1VwM+Lu7k5BQUGLKLmJiYn06dNH+vvgwYNYW1tTWFgo
      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
    </thumbnail>
  </thumbnails>
</workbook>
